{"version":3,"sources":["auth/PrivateRoute.js","auth/AuthService.js","auth/AuthContext.js","ui/ImageFallback.js","actors/ActorCard.js","actors/ActorService.js","actors/Actors.js","ui/Navbar.js","ui/AddButton.js","movies/MoviesService.js","ui/Home.js","actors/ActorPage.js","movies/MovieCard.js","movies/Movies.js","movies/MoviePage.js","ui/CustomCheckbox.js","movies/AddMovie.js","actors/AddActor.js","ui/NotFound.js","ui/Footer.js","App.js","reportWebVitals.js","auth/Auth0ProviderWithHistory.js","styles/theme.js","index.js"],"names":["PrivateRoute","component","args","withAuthenticationRequired","onRedirecting","getRole","token","axios","REACT_APP_API_URL","headers","Authorization","then","res","data","catch","err","response","console","log","AuthContext","createContext","children","useState","userRole","setUserRole","setToken","useAuth0","user","isAuthenticated","getAccessTokenSilently","useEffect","a","user_token","success","role","getUserRole","Provider","value","ImageFallback","maxW","flexDirection","alignItems","justifyContent","opacity","h","mx","my","ViewOff","mt","ActorCard","props","actor","id","first_name","last_name","age","gender","image_link","seeking_role","to","w","rounded","borderRadius","boxShadow","bg","useColorModeValue","_groupHover","transform","overflow","src","alt","fallback","objectFit","boxSize","pb","pt","pl","fontWeight","as","lineHeight","isTruncated","d","color","letterSpacing","fontSize","textTransform","colorScheme","ml","process","getActors","request","getActorById","apiURL","deleteActor","method","addActor","body","editActor","actorId","Actors","actors","setActors","toast","useToast","useContext","title","description","status","duration","isClosable","position","minH","columns","spacing","textStyle","variant","Add","pr","p","map","Navbar","useColorMode","colorMode","toggleColorMode","loginWithRedirect","logout","isLoading","px","borderBottom","borderColor","_hover","_active","outline","_focus","onClick","Sun","Moon","isLoaded","py","mr","size","picture","loading","cursor","returnTo","window","location","origin","appState","targetUrl","pathname","AddButton","action","actionLink","borderStyle","display","top","right","getMovies","getMovieById","deleteMovie","addMovie","editMovie","movieId","Home","moviesCount","setMoviesCount","actorsCount","setActorsCount","movies","length","centerContent","textAlign","nickname","ReactLink","ActorPage","lastname","actorDetails","setActorDetails","deleteIsOpen","setDeleteIsOpen","cancelRef","useRef","history","useHistory","match","params","push","deleteActorConfirm","movie","isOpen","leastDestructiveRef","onClose","ref","MovieCard","poster","release_date","transition","backgroundImage","substring","slice","i","Fragment","Movies","setMovies","MoviePage","genre","seeking_talent","movieDetails","setMovieDetails","deleteMovieConfirm","minW","CustomCheckbox","setData","maxH","item","Number","AddMovie","actor_ids","initialValues","setInitialValues","selectedActors","setSelectedActors","seekingTalent","setSeekingTalent","Date","selectedDate","setSelectedDate","actionType","url","includes","movieInitialValues","callMovieApi","values","actions","setSubmitting","enableReinitialize","validate","errors","URL","e","onSubmit","actors_id","align","name","field","form","isInvalid","touched","isRequired","htmlFor","placeholder","selected","onChange","date","direction","newSelectedActors","checkActors","isSubmitting","type","AddActor","movie_ids","selectedMovies","setSelectedMovies","seekingRole","setSeekingRole","actorInitialValues","callActorApi","isNaN","newSelectedMovies","checkMovies","NotFound","Footer","bottom","href","isExternal","decoration","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Auth0ProviderWithHistory","domain","clientId","redirectUri","onRedirectCallback","audience","customTheme","extendTheme","styles","global","mode","fontFamily","fontWeights","normal","medium","bold","label","textStyles","heading","base","md","subheading","info","links","transitionTimingFunction","ReactDOM","render","StrictMode","theme","document","getElementById"],"mappings":"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","file":"static/js/main.7bdec971.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Route} from \"react-router-dom\";\r\nimport {withAuthenticationRequired} from \"@auth0/auth0-react\";\r\nimport {Spinner} from \"@chakra-ui/react\";\r\n\r\nconst PrivateRoute = ({component, ...args}) => (\r\n  <Route\r\n    component={withAuthenticationRequired(component, {\r\n      onRedirecting: () => <Spinner />,\r\n    })}\r\n    {...args}\r\n  />\r\n);\r\n\r\nexport default PrivateRoute;\r\n","import axios from \"axios\";\r\n\r\nconst {REACT_APP_API_URL} = process.env;\r\n\r\nexport const getRole = (token) => {\r\n  const apiURL = REACT_APP_API_URL + \"/role\";\r\n\r\n  return axios(apiURL, {\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((res) => res.data)\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        return err.response.data;\r\n      } else {\r\n        console.log(err);\r\n      }\r\n    });\r\n};\r\n","import React, {createContext, useState, useEffect} from \"react\";\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport {getRole} from \"./AuthService\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default ({children}) => {\r\n  const [userRole, setUserRole] = useState(\"\");\r\n  const [token, setToken] = useState(null);\r\n  const {user, isAuthenticated, getAccessTokenSilently} = useAuth0();\r\n\r\n  useEffect(() => {\r\n    const getUserRole = async () => {\r\n      if (isAuthenticated) {\r\n        const user_token = await getAccessTokenSilently();\r\n        setToken(user_token);\r\n        const res = await getRole(user_token);\r\n\r\n        if (res.success) {\r\n          setUserRole(res.role);\r\n        } else {\r\n          console.log(\"error while getting user role\");\r\n        }\r\n      }\r\n    };\r\n\r\n    getUserRole();\r\n  }, [isAuthenticated, getAccessTokenSilently]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{isAuthenticated, token, user, userRole}}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","import {Text, Flex} from \"@chakra-ui/react\";\r\nimport {ViewOffIcon} from \"@chakra-ui/icons\";\r\n\r\nexport const ImageFallback = () => {\r\n  return (\r\n    <Flex\r\n      maxW=\"xs\"\r\n      flexDirection=\"column\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      opacity=\"0.50\"\r\n      h=\"250px\"\r\n      mx=\"auto\"\r\n      my=\"0\"\r\n    >\r\n      <ViewOffIcon />\r\n      <Text mt=\"2\">image not available</Text>\r\n    </Flex>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Image,\r\n  Badge,\r\n  Container,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport {ImageFallback} from \"../ui/ImageFallback\";\r\n\r\nconst ActorCard = (props) => {\r\n  const {\r\n    id,\r\n    first_name,\r\n    last_name,\r\n    age,\r\n    gender,\r\n    image_link,\r\n    seeking_role,\r\n  } = props.actor;\r\n\r\n  return (\r\n    <Container role=\"group\">\r\n      <NavLink to={`/actors/${id}`}>\r\n        <Box\r\n          maxW=\"md\"\r\n          w=\"250px\"\r\n          h=\"260px\"\r\n          rounded=\"lg\"\r\n          borderRadius=\"sm\"\r\n          boxShadow=\"md\"\r\n          bg={useColorModeValue(\"gray.50\", \"gray.700\")}\r\n          _groupHover={{\r\n            transform: \"translateY( -3px ) scale( 1.02 ) \",\r\n            boxShadow: \"2xl\",\r\n          }}\r\n        >\r\n          <Box w=\"250px\" h=\"180px\" overflow=\"hidden\">\r\n            <Image\r\n              src={image_link}\r\n              alt=\"actor image\"\r\n              fallback={<ImageFallback />}\r\n              objectFit=\"cover\"\r\n              boxSize=\"250px\"\r\n            />\r\n          </Box>\r\n          <Box pb=\"6\" pt=\"2\" pl=\"4\">\r\n            <Box\r\n              mt=\"1\"\r\n              fontWeight=\"semibold\"\r\n              as=\"h4\"\r\n              lineHeight=\"tight\"\r\n              isTruncated\r\n            >\r\n              {first_name} {last_name}\r\n            </Box>\r\n            <Box d=\"flex\" alignItems=\"baseline\">\r\n              <Box\r\n                mt=\"4px\"\r\n                color=\"gray.500\"\r\n                fontWeight=\"semibold\"\r\n                letterSpacing=\"wide\"\r\n                fontSize=\"xs\"\r\n                textTransform=\"uppercase\"\r\n              >\r\n                {age} yrs\r\n                <Box as=\"span\" opacity={0.7} pl=\"4px\">\r\n                  &bull; {gender}\r\n                </Box>\r\n                {seeking_role ? (\r\n                  <Badge colorScheme=\"teal\" ml=\"19px\">\r\n                    Seeking role\r\n                  </Badge>\r\n                ) : null}\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </NavLink>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ActorCard;\r\n","import axios from \"axios\";\r\n\r\nconst {REACT_APP_API_URL} = process.env;\r\n\r\nexport const getActors = () => {\r\n  const apiURL = REACT_APP_API_URL + \"/actors\";\r\n  return axios(apiURL, {\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((res) => res.data)\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        console.log(err.response);\r\n        return err.response.data;\r\n      } else {\r\n        // client never received a response, or request never left\r\n        console.log(err.request);\r\n      }\r\n    });\r\n};\r\n\r\nexport const getActorById = (id) => {\r\n  const apiURL = REACT_APP_API_URL + \"/actors/\" + id;\r\n  return axios(apiURL, {\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((res) => res.data)\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        console.log(err.response);\r\n        return err.response.data;\r\n      } else {\r\n        console.log(err.request);\r\n      }\r\n    });\r\n};\r\n\r\nexport const deleteActor = (id, token) => {\r\n  const apiURL = REACT_APP_API_URL + \"/actors/\" + id;\r\n  return axios(apiURL, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((res) => res.data)\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        console.log(err.response);\r\n        return err.response.data;\r\n      } else {\r\n        console.log(err.request);\r\n      }\r\n    });\r\n};\r\n\r\nexport const addActor = (body, token) => {\r\n  const apiURL = REACT_APP_API_URL + \"/actors\";\r\n  return axios(apiURL, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    data: body,\r\n  })\r\n    .then((res) => res.data)\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        console.log(err.response);\r\n        return err.response.data;\r\n      } else {\r\n        console.log(err.request);\r\n      }\r\n    });\r\n};\r\n\r\nexport const editActor = (body, actorId, token) => {\r\n  const apiURL = REACT_APP_API_URL + \"/actors/\" + actorId;\r\n  return axios(apiURL, {\r\n    method: \"PATCH\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    data: body,\r\n  })\r\n    .then((res) => res.data)\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        console.log(err.response);\r\n        return err.response.data;\r\n      } else {\r\n        console.log(err.request);\r\n      }\r\n    });\r\n};\r\n","import {React, useContext, useState, useEffect} from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport ActorCard from \"./ActorCard\";\r\nimport {\r\n  Box,\r\n  SimpleGrid,\r\n  Flex,\r\n  Container,\r\n  Button,\r\n  Center,\r\n  Text,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport {AddIcon} from \"@chakra-ui/icons\";\r\n\r\nimport {AuthContext} from \"../auth/AuthContext\";\r\nimport {getActors} from \"./ActorService\";\r\n\r\nconst Actors = () => {\r\n  const [actors, setActors] = useState([]);\r\n  const toast = useToast();\r\n  const {isAuthenticated, userRole} = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    getActors()\r\n      .then((res) => {\r\n        setActors(res.actors);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast({\r\n          title: \"Error\",\r\n          description: \"An error has occured, Please try again later.\",\r\n          status: \"error\",\r\n          duration: 3000,\r\n          isClosable: true,\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Container maxW=\"xl\" position=\"relative\" minH=\"calc(100vh - 81px)\">\r\n        <SimpleGrid columns={2} spacing={[52, 36]} pt=\"20\">\r\n          <Box>\r\n            <Center h=\"80px\">\r\n              <Text textStyle=\"heading\">Actors</Text>\r\n            </Center>\r\n          </Box>\r\n          <Box>\r\n            <Center h=\"80px\">\r\n              {isAuthenticated && userRole !== \"Casting Assistant\" ? (\r\n                <NavLink to=\"/actors/add\">\r\n                  <Button colorScheme=\"teal\" variant=\"solid\">\r\n                    <AddIcon w={5} h={5} pr=\"2\"></AddIcon> Add Actor\r\n                  </Button>\r\n                </NavLink>\r\n              ) : null}\r\n            </Center>\r\n          </Box>\r\n        </SimpleGrid>\r\n        <Center>\r\n          <Flex p=\"10\" mt=\"5\">\r\n            <SimpleGrid columns={[1, 2, 3]} spacing=\"40px\">\r\n              {actors.map((actor) => {\r\n                return (\r\n                  <Box key={actor.id}>\r\n                    <ActorCard actor={actor}></ActorCard>\r\n                  </Box>\r\n                );\r\n              })}\r\n            </SimpleGrid>\r\n          </Flex>\r\n        </Center>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Actors;\r\n","import {React, useContext} from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport {\r\n  Flex,\r\n  Spacer,\r\n  Box,\r\n  Button,\r\n  useColorMode,\r\n  useColorModeValue,\r\n  Skeleton,\r\n  Avatar,\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  PopoverBody,\r\n  PopoverArrow,\r\n  Portal,\r\n} from \"@chakra-ui/react\";\r\nimport {SunIcon, MoonIcon} from \"@chakra-ui/icons\";\r\n\r\nimport {AuthContext} from \"../auth/AuthContext\";\r\n\r\nconst Navbar = () => {\r\n  const {colorMode, toggleColorMode} = useColorMode();\r\n  const {isAuthenticated, user} = useContext(AuthContext);\r\n  const {loginWithRedirect, logout, isLoading} = useAuth0();\r\n\r\n  return (\r\n    <Flex\r\n      pt=\"6\"\r\n      pb=\"4\"\r\n      px=\"8\"\r\n      borderBottom=\"1px\"\r\n      borderColor={useColorModeValue(\"gray.200\", \"gray.700\")}\r\n    >\r\n      <Box px=\"4\">\r\n        <NavLink to=\"/\">\r\n          <Box\r\n            as=\"button\"\r\n            h=\"42px\"\r\n            w=\"42px\"\r\n            color=\"white\"\r\n            borderRadius=\"50%\"\r\n            fontSize=\"16px\"\r\n            fontWeight=\"bold\"\r\n            bg=\"linear-gradient(299deg, rgba(44,122,123,1) 0%, rgba(79,209,197,1) 100%)\"\r\n            _hover={{\r\n              bg: \"#38B2AC\",\r\n            }}\r\n            _active={{\r\n              bg: \"#4FD1C5\",\r\n              outline: \"none\",\r\n            }}\r\n            _focus={{\r\n              outline: \"none\",\r\n            }}\r\n          >\r\n            CA\r\n          </Box>\r\n        </NavLink>\r\n      </Box>\r\n      <Box px=\"4\">\r\n        <NavLink to=\"/actors\">\r\n          <Button colorScheme=\"teal\" variant=\"ghost\" borderRadius=\"8px\">\r\n            Actors\r\n          </Button>\r\n        </NavLink>\r\n      </Box>\r\n      <Box px=\"4\">\r\n        <NavLink to=\"/movies\">\r\n          <Button colorScheme=\"teal\" variant=\"ghost\" borderRadius=\"8px\">\r\n            Movies\r\n          </Button>\r\n        </NavLink>\r\n      </Box>\r\n      <Spacer />\r\n      <Box>\r\n        <Button onClick={toggleColorMode} variant=\"ghost\">\r\n          {colorMode === \"light\" ? (\r\n            <SunIcon w={4} h={4} color=\"gray.600\" />\r\n          ) : (\r\n            <MoonIcon w={4} h={4} color=\"gray.600\" />\r\n          )}\r\n        </Button>\r\n      </Box>\r\n      <Skeleton isLoaded={!isLoading}>\r\n        {isAuthenticated ? (\r\n          <Box px=\"4\" py=\"1\">\r\n            <Popover>\r\n              <PopoverTrigger>\r\n                <Avatar\r\n                  mr=\"16px\"\r\n                  size=\"sm\"\r\n                  src={user.picture}\r\n                  loading=\"lazy\"\r\n                  _hover={{cursor: \"pointer\"}}\r\n                />\r\n              </PopoverTrigger>\r\n              <Portal>\r\n                <PopoverContent>\r\n                  <PopoverArrow />\r\n\r\n                  <PopoverBody>\r\n                    <Button\r\n                      colorScheme=\"teal\"\r\n                      onClick={() => logout({returnTo: window.location.origin})}\r\n                    >\r\n                      Log out\r\n                    </Button>\r\n                  </PopoverBody>\r\n                </PopoverContent>\r\n              </Portal>\r\n            </Popover>\r\n          </Box>\r\n        ) : (\r\n          <Box px=\"4\">\r\n            <Button\r\n              colorScheme=\"teal\"\r\n              onClick={() =>\r\n                loginWithRedirect({\r\n                  appState: {targetUrl: window.location.pathname},\r\n                })\r\n              }\r\n            >\r\n              Log in\r\n            </Button>\r\n          </Box>\r\n        )}\r\n      </Skeleton>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Text,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\nimport {AddIcon} from \"@chakra-ui/icons\";\r\n\r\nconst AddButton = ({action, actionLink}) => {\r\n  return (\r\n    <Box>\r\n      <NavLink to={actionLink}>\r\n        <Button\r\n          maxW=\"md\"\r\n          w=\"150px\"\r\n          h=\"150px\"\r\n          boxShadow=\"base\"\r\n          borderStyle=\"dashed\"\r\n          borderColor=\"teal.500\"\r\n          borderRadius=\"md\"\r\n          opacity=\"1\"\r\n          bg={useColorModeValue(\"gray.50\", \"gray.700\")}\r\n        >\r\n          <AddIcon\r\n            display=\"block\"\r\n            w={6}\r\n            h={6}\r\n            pr=\"2\"\r\n            position=\"absolute\"\r\n            top=\"30%\"\r\n            right=\"40%\"\r\n          ></AddIcon>\r\n          <Text display=\"block\" fontSize=\"xl\" mt=\"8\">\r\n            {action}\r\n          </Text>\r\n        </Button>\r\n      </NavLink>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddButton;\r\n","import axios from \"axios\";\r\n\r\nconst {REACT_APP_API_URL} = process.env;\r\n\r\nexport const getMovies = () => {\r\n  const apiURL = REACT_APP_API_URL + \"/movies\";\r\n  return axios(apiURL, {\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((res) => res.data)\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        console.log(err.response);\r\n        return err.response.data;\r\n      } else {\r\n        // client never received a response, or request never left\r\n        console.log(err.request);\r\n      }\r\n    });\r\n};\r\n\r\nexport const getMovieById = (id) => {\r\n  const apiURL = REACT_APP_API_URL + \"/movies/\" + id;\r\n  return axios(apiURL, {\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((res) => res.data)\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        console.log(err.response);\r\n        return err.response.data;\r\n      } else {\r\n        console.log(err.request);\r\n      }\r\n    });\r\n};\r\n\r\nexport const deleteMovie = (id, token) => {\r\n  const apiURL = REACT_APP_API_URL + \"/movies/\" + id;\r\n  return axios(apiURL, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((res) => res.data)\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        console.log(err.response);\r\n        return err.response.data;\r\n      } else {\r\n        console.log(err.request);\r\n      }\r\n    });\r\n};\r\n\r\nexport const addMovie = (body, token) => {\r\n  const apiURL = REACT_APP_API_URL + \"/movies\";\r\n\r\n  return axios(apiURL, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    data: body,\r\n  })\r\n    .then((res) => res.data)\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        console.log(err.response);\r\n        return err.response.data;\r\n      } else {\r\n        console.log(err.request);\r\n      }\r\n    });\r\n};\r\n\r\nexport const editMovie = (body, movieId, token) => {\r\n  const apiURL = REACT_APP_API_URL + \"/movies/\" + movieId;\r\n  return axios(apiURL, {\r\n    method: \"PATCH\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    data: body,\r\n  })\r\n    .then((res) => res.data)\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        console.log(err.response);\r\n        return err.response.data;\r\n      } else {\r\n        console.log(err.request);\r\n      }\r\n    });\r\n};\r\n","import {React, useContext, useState, useEffect} from \"react\";\r\nimport {Link as ReactLink} from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  SimpleGrid,\r\n  Container,\r\n  Text,\r\n  useColorModeValue,\r\n  Link,\r\n  Stat,\r\n  StatLabel,\r\n  StatNumber,\r\n  StatHelpText,\r\n} from \"@chakra-ui/react\";\r\nimport AddButton from \"./AddButton\";\r\n\r\nimport {AuthContext} from \"../auth/AuthContext\";\r\nimport {getMovies} from \"../movies/MoviesService\";\r\nimport {getActors} from \"../actors/ActorService\";\r\n\r\nconst Home = () => {\r\n  const [moviesCount, setMoviesCount] = useState(0);\r\n  const [actorsCount, setActorsCount] = useState(0);\r\n  const {user, userRole, isAuthenticated} = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    getMovies()\r\n      .then((res) => {\r\n        setMoviesCount(res.movies.length);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    getActors()\r\n      .then((res) => {\r\n        setActorsCount(res.actors.length);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Container\r\n      maxW=\"xl\"\r\n      pt=\"20\"\r\n      px=\"20\"\r\n      position=\"relative\"\r\n      minH=\"calc(100vh - 81px)\"\r\n      centerContent\r\n    >\r\n      <Text textStyle=\"heading\">Dashboard</Text>\r\n      <Box mt=\"20\" textAlign=\"center\">\r\n        <Text fontSize=\"lg\">\r\n          Welcome {isAuthenticated ? user.nickname + \" !\" : \"!\"}\r\n        </Text>\r\n        <Text fontSize=\"md\">\r\n          you're in the <strong>{isAuthenticated ? userRole : \"guest\"}</strong>{\" \"}\r\n          Dashboard\r\n        </Text>\r\n      </Box>\r\n      <SimpleGrid columns={[1, 2, 4]} spacing=\"20px\" mt=\"10\">\r\n        <Box\r\n          maxW=\"md\"\r\n          w=\"150px\"\r\n          h=\"150px\"\r\n          boxShadow=\"base\"\r\n          borderRadius=\"md\"\r\n          opacity=\"1\"\r\n          bg={useColorModeValue(\"gray.50\", \"gray.700\")}\r\n        >\r\n          <Stat pt=\"8\" pl=\"4\">\r\n            <StatLabel fontSize=\"xl\">Actors</StatLabel>\r\n            <StatNumber>{actorsCount}</StatNumber>\r\n            <StatHelpText>\r\n              <Link as={ReactLink} to=\"/actors\" textStyle=\"links\">\r\n                View all actors\r\n              </Link>\r\n            </StatHelpText>\r\n          </Stat>\r\n        </Box>\r\n\r\n        <Box\r\n          maxW=\"md\"\r\n          w=\"150px\"\r\n          h=\"150px\"\r\n          boxShadow=\"base\"\r\n          borderRadius=\"md\"\r\n          opacity=\"1\"\r\n          bg={useColorModeValue(\"gray.50\", \"gray.700\")}\r\n        >\r\n          <Stat pt=\"8\" pl=\"4\">\r\n            <StatLabel fontSize=\"xl\">Movies</StatLabel>\r\n            <StatNumber>{moviesCount}</StatNumber>\r\n            <StatHelpText>\r\n              <Link as={ReactLink} to=\"/movies\" textStyle=\"links\">\r\n                View all movies\r\n              </Link>\r\n            </StatHelpText>\r\n          </Stat>\r\n        </Box>\r\n        {!isAuthenticated ? null : (\r\n          <>\r\n            <AddButton action=\"Add actors\" actionLink=\"/actors/add\" />\r\n            <AddButton action=\"Add movies\" actionLink=\"/movies/add\" />\r\n          </>\r\n        )}\r\n      </SimpleGrid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import {React, useContext, useState, useRef, useEffect} from \"react\";\r\nimport {Link as ReactLink, NavLink, useHistory} from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Container,\r\n  Image,\r\n  Text,\r\n  Stack,\r\n  Link,\r\n  Button,\r\n  Spacer,\r\n  Center,\r\n  Badge,\r\n  AlertDialog,\r\n  AlertDialogBody,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogContent,\r\n  AlertDialogOverlay,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport {ImageFallback} from \"../ui/ImageFallback\";\r\n\r\nimport {AuthContext} from \"../auth/AuthContext\";\r\nimport {getActorById, deleteActor} from \"./ActorService\";\r\n\r\nconst ActorPage = (props) => {\r\n  const [actorDetails, setActorDetails] = useState({\r\n    id: 0,\r\n    first_name: \"\",\r\n    lastname: \"\",\r\n    age: \"\",\r\n    gender: \"\",\r\n    image_link: \"\",\r\n    seeking_role: false,\r\n    movies: [],\r\n  });\r\n  const [deleteIsOpen, setDeleteIsOpen] = useState(false);\r\n\r\n  const {isAuthenticated, userRole, token} = useContext(AuthContext);\r\n  const cancelRef = useRef();\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n  const actorId = props.match.params.actorId;\r\n\r\n  useEffect(() => {\r\n    getActorById(actorId).then((res) => {\r\n      if (res.success) {\r\n        setActorDetails(res.actor);\r\n      } else {\r\n        history.push(\"/404\");\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const deleteActorConfirm = async () => {\r\n    const res = await deleteActor(actorId, token);\r\n\r\n    if (res.success) {\r\n      toast({\r\n        title: \"Actor deleted\",\r\n        description: \"Selected actor deleted successfully\",\r\n        status: \"success\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n      setDeleteIsOpen(false);\r\n    } else {\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"An error has occured, Please try again later.\",\r\n        status: \"error\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      maxW=\"xl\"\r\n      position=\"relative\"\r\n      minH=\"calc(100vh - 81px)\"\r\n      centerContent\r\n    >\r\n      <Box px=\"10\" pt=\"10\">\r\n        <Text textStyle=\"title\">\r\n          {actorDetails.first_name} {actorDetails.last_name}\r\n        </Text>\r\n      </Box>\r\n      <Stack px=\"10\" py=\"5\" textStyle=\"info\">\r\n        <Center>\r\n          <Box boxSize=\"xs\" overflow=\"hidden\" boxShadow=\"lg\">\r\n            <Image\r\n              maxW=\"xs\"\r\n              objectFit=\"cover\"\r\n              src={actorDetails.image_link}\r\n              alt=\"Actor image\"\r\n              fallback={<ImageFallback />}\r\n            />\r\n          </Box>\r\n        </Center>\r\n\r\n        {actorDetails.seeking_role ? <Badge>Seeking role</Badge> : null}\r\n\r\n        <Center>\r\n          <Container maxW=\"3xs\" my=\"4\">\r\n            <Flex>\r\n              <Text>Age: </Text>\r\n              <Spacer />\r\n              <Text>{actorDetails.age} yrs</Text>\r\n            </Flex>\r\n            <Flex>\r\n              <Text>Gender: </Text>\r\n              <Spacer />\r\n              <Text>{actorDetails.gender} </Text>\r\n            </Flex>\r\n          </Container>\r\n        </Center>\r\n\r\n        <Text>Movies: </Text>\r\n        {actorDetails.movies.map((movie) => {\r\n          return (\r\n            <Link\r\n              as={ReactLink}\r\n              to={`/movies/${movie.id}`}\r\n              key={movie.id}\r\n              textStyle=\"links\"\r\n            >\r\n              {movie.title}\r\n            </Link>\r\n          );\r\n        })}\r\n      </Stack>\r\n      <Flex p=\"2\">\r\n        {isAuthenticated &&\r\n        (userRole === \"Executive Producer\" ||\r\n          userRole === \"Casting Director\") ? (\r\n          <NavLink to={`/actors/${actorId}/edit`}>\r\n            <Button mr=\"2\">Edit</Button>\r\n          </NavLink>\r\n        ) : null}\r\n\r\n        {isAuthenticated && userRole === \"Executive Producer\" ? (\r\n          <Button ml=\"2\" bg=\"red.500\" onClick={() => setDeleteIsOpen(true)}>\r\n            Delete\r\n          </Button>\r\n        ) : null}\r\n      </Flex>\r\n      <AlertDialog\r\n        isOpen={deleteIsOpen}\r\n        leastDestructiveRef={cancelRef}\r\n        onClose={() => setDeleteIsOpen(false)}\r\n      >\r\n        <AlertDialogOverlay>\r\n          <AlertDialogContent>\r\n            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n              Delete Actor\r\n            </AlertDialogHeader>\r\n\r\n            <AlertDialogBody>\r\n              Are you sure? You can't undo this action afterwards.\r\n            </AlertDialogBody>\r\n\r\n            <AlertDialogFooter>\r\n              <Button ref={cancelRef} onClick={() => setDeleteIsOpen(false)}>\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                colorScheme=\"red\"\r\n                onClick={() => deleteActorConfirm()}\r\n                ml={3}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </AlertDialogFooter>\r\n          </AlertDialogContent>\r\n        </AlertDialogOverlay>\r\n      </AlertDialog>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ActorPage;\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Box, Image, Container, Text, useColorModeValue} from \"@chakra-ui/react\";\r\nimport {ImageFallback} from \"../ui/ImageFallback\";\r\n\r\nconst MovieCard = (props) => {\r\n  const {id, title, poster, release_date, actors} = props.movie;\r\n\r\n  return (\r\n    <Container>\r\n      <Box\r\n        maxW=\"md\"\r\n        w=\"250px\"\r\n        h=\"350px\"\r\n        rounded=\"lg\"\r\n        borderRadius=\"sm\"\r\n        boxShadow=\"md\"\r\n        role=\"group\"\r\n        bg={useColorModeValue(\"white\", \"gray.700\")}\r\n      >\r\n        <NavLink to={`/movies/${id}`}>\r\n          <Box\r\n            position=\"absolute\"\r\n            w=\"250px\"\r\n            h=\"350px\"\r\n            py=\"70px\"\r\n            textAlign=\"center\"\r\n            color=\"gray.300\"\r\n            fontWeight=\"semibold\"\r\n            letterSpacing=\"5px\"\r\n            fontSize=\"xs\"\r\n            opacity=\"0\"\r\n            textTransform=\"uppercase\"\r\n            _groupHover={{\r\n              opacity: 1,\r\n              transition: \"opacity 0.2s ease-in\",\r\n              backgroundImage:\r\n                \"linear-gradient(to bottom, hsla(0, 0%, 0%, 0) 0%,hsla(0, 0%, 0%, 0.762) 94.1%,hsla(0, 0%, 0%, 0.790) 100%)\",\r\n            }}\r\n          >\r\n            {release_date.substring(7, 16)}\r\n            <Text as=\"p\" mt=\"200px\" letterSpacing=\"2px\">\r\n              {actors.slice(0, 3).map((actor, i) => {\r\n                if (i === actors.length - 1 || i === 2) {\r\n                  return (\r\n                    <React.Fragment key={actor.id}>\r\n                      {\" \"}\r\n                      {actor.last_name}\r\n                    </React.Fragment>\r\n                  );\r\n                } else {\r\n                  return (\r\n                    <React.Fragment key={actor.id}>\r\n                      {\" \"}\r\n                      {actor.last_name} &bull;\r\n                    </React.Fragment>\r\n                  );\r\n                }\r\n              })}\r\n            </Text>\r\n          </Box>\r\n          <Box\r\n            position=\"absolute\"\r\n            w=\"250px\"\r\n            mx=\"auto\"\r\n            my=\"auto\"\r\n            textAlign=\"center\"\r\n            fontSize=\"lg\"\r\n            fontWeight=\"bold\"\r\n            textStyle=\"heading\"\r\n            color=\"white\"\r\n            pt=\"275px\"\r\n            as=\"span\"\r\n            _groupHover={{\r\n              transform: \"translateY(-60%)\",\r\n              transition: \"transform 1000ms cubic-bezier(0.19, 1, 0.22, 1)\",\r\n            }}\r\n          >\r\n            {title}\r\n          </Box>\r\n          <Image\r\n            w=\"250px\"\r\n            h=\"350px\"\r\n            src={poster}\r\n            alt=\"movie poster\"\r\n            objectFit=\"cover\"\r\n            fallback={<ImageFallback />}\r\n          />\r\n        </NavLink>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import {React, useContext, useState, useEffect} from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  SimpleGrid,\r\n  Flex,\r\n  Container,\r\n  Button,\r\n  Center,\r\n  Text,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport {AddIcon} from \"@chakra-ui/icons\";\r\nimport MovieCard from \"./MovieCard\";\r\n\r\nimport {AuthContext} from \"../auth/AuthContext\";\r\nimport {getMovies} from \"./MoviesService\";\r\n\r\nconst Movies = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const toast = useToast();\r\n  const {isAuthenticated, userRole} = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    getMovies()\r\n      .then((res) => {\r\n        setMovies(res.movies);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast({\r\n          title: \"Error\",\r\n          description: \"Error has occured, Please try again later.\",\r\n          status: \"error\",\r\n          duration: 3000,\r\n          isClosable: true,\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Container maxW=\"xl\" position=\"relative\" minH=\"calc(100vh - 81px)\">\r\n        <SimpleGrid columns={2} spacing={[52, 36]} pt=\"20\">\r\n          <Box>\r\n            <Center h=\"80px\">\r\n              <Text textStyle=\"heading\">Movies</Text>\r\n            </Center>\r\n          </Box>\r\n          <Box>\r\n            <Center h=\"80px\">\r\n              {isAuthenticated && userRole === \"Executive Producer\" ? (\r\n                <NavLink to=\"/movies/add\">\r\n                  <Button colorScheme=\"teal\" variant=\"solid\">\r\n                    <AddIcon w={5} h={5} pr=\"2\"></AddIcon> Add Movie\r\n                  </Button>\r\n                </NavLink>\r\n              ) : null}\r\n            </Center>\r\n          </Box>\r\n        </SimpleGrid>\r\n        <Center>\r\n          <Flex p=\"10\" mt=\"5\">\r\n            <SimpleGrid columns={[1, 2, 3]} spacing=\"40px\">\r\n              {movies.map((movie) => {\r\n                return (\r\n                  <Box key={movie.id}>\r\n                    <MovieCard movie={movie}></MovieCard>\r\n                  </Box>\r\n                );\r\n              })}\r\n            </SimpleGrid>\r\n          </Flex>\r\n        </Center>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","import {React, useContext, useState, useRef, useEffect} from \"react\";\r\nimport {Link as ReactLink, NavLink, useHistory} from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Container,\r\n  Image,\r\n  Text,\r\n  Stack,\r\n  Link,\r\n  Button,\r\n  Spacer,\r\n  Center,\r\n  Badge,\r\n  AlertDialog,\r\n  AlertDialogBody,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogContent,\r\n  AlertDialogOverlay,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport {ImageFallback} from \"../ui/ImageFallback\";\r\n\r\nimport {AuthContext} from \"../auth/AuthContext\";\r\nimport {getMovieById, deleteMovie} from \"./MoviesService\";\r\n\r\nconst MoviePage = (props) => {\r\n  const [movieDetails, setMovieDetails] = useState({\r\n    id: 0,\r\n    title: \"\",\r\n    poster: \"\",\r\n    genre: \"\",\r\n    release_date: \"\",\r\n    seeking_talent: false,\r\n    actors: [],\r\n  });\r\n  const [deleteIsOpen, setDeleteIsOpen] = useState(false);\r\n\r\n  const {isAuthenticated, userRole, token} = useContext(AuthContext);\r\n  const cancelRef = useRef();\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n  const movieId = props.match.params.movieId;\r\n\r\n  useEffect(() => {\r\n    getMovieById(movieId).then((res) => {\r\n      if (res.success) {\r\n        setMovieDetails(res.movie);\r\n      } else {\r\n        history.push(\"/404\");\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const deleteMovieConfirm = async () => {\r\n    const res = await deleteMovie(movieId, token);\r\n    if (res.success) {\r\n      toast({\r\n        title: \"Movie deleted\",\r\n        description: \"Selected movie deleted successfully\",\r\n        status: \"success\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n      setDeleteIsOpen(false);\r\n    } else {\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"An error has occured, Please try again later.\",\r\n        status: \"error\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      maxW=\"xl\"\r\n      position=\"relative\"\r\n      minH=\"calc(100vh - 81px)\"\r\n      centerContent\r\n    >\r\n      <Box px=\"10\" pt=\"10\">\r\n        <Text textStyle=\"title\">{movieDetails.title}</Text>\r\n      </Box>\r\n      <Stack px=\"10\" py=\"5\" textStyle=\"info\">\r\n        <Center>\r\n          <Box h=\"450px\" minW=\"250px\" overflow=\"hidden\" boxShadow=\"lg\">\r\n            <Image\r\n              maxW=\"xs\"\r\n              objectFit=\"cover\"\r\n              src={movieDetails.poster}\r\n              alt=\"Movie poster\"\r\n              fallback={<ImageFallback />}\r\n            />\r\n          </Box>\r\n        </Center>\r\n\r\n        {movieDetails.seeking_talent ? <Badge>Seeking talent</Badge> : null}\r\n\r\n        <Center>\r\n          <Container maxW=\"xs\" my=\"4\">\r\n            <Flex>\r\n              <Text>Genre: </Text>\r\n              <Spacer />\r\n              <Text>{movieDetails.genre}</Text>\r\n            </Flex>\r\n            <Flex>\r\n              <Text>Release Date: </Text>\r\n              <Spacer />\r\n              <Text>{movieDetails.release_date.substring(7, 16)}</Text>\r\n            </Flex>\r\n          </Container>\r\n        </Center>\r\n\r\n        <Text>Actors: </Text>\r\n        {movieDetails.actors.map((actor) => {\r\n          return (\r\n            <Link\r\n              as={ReactLink}\r\n              to={`/actors/${actor.id}`}\r\n              key={actor.id}\r\n              textStyle=\"links\"\r\n            >\r\n              {actor.first_name} {actor.last_name}\r\n            </Link>\r\n          );\r\n        })}\r\n      </Stack>\r\n      <Flex p=\"2\">\r\n        {isAuthenticated &&\r\n        (userRole === \"Executive Producer\" ||\r\n          userRole === \"Casting Director\") ? (\r\n          <NavLink to={`/movies/${movieId}/edit`}>\r\n            <Button mr=\"2\">Edit</Button>\r\n          </NavLink>\r\n        ) : null}\r\n\r\n        {isAuthenticated && userRole === \"Executive Producer\" ? (\r\n          <Button ml=\"2\" bg=\"red.500\" onClick={() => setDeleteIsOpen(true)}>\r\n            Delete\r\n          </Button>\r\n        ) : null}\r\n      </Flex>\r\n      <AlertDialog\r\n        isOpen={deleteIsOpen}\r\n        leastDestructiveRef={cancelRef}\r\n        onClose={() => setDeleteIsOpen(false)}\r\n      >\r\n        <AlertDialogOverlay>\r\n          <AlertDialogContent>\r\n            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n              Delete Actor\r\n            </AlertDialogHeader>\r\n\r\n            <AlertDialogBody>\r\n              Are you sure? You can't undo this action afterwards.\r\n            </AlertDialogBody>\r\n\r\n            <AlertDialogFooter>\r\n              <Button ref={cancelRef} onClick={() => setDeleteIsOpen(false)}>\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                colorScheme=\"red\"\r\n                onClick={() => deleteMovieConfirm()}\r\n                ml={3}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </AlertDialogFooter>\r\n          </AlertDialogContent>\r\n        </AlertDialogOverlay>\r\n      </AlertDialog>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MoviePage;\r\n","import {React, useState, useEffect} from \"react\";\r\nimport {\r\n  Stack,\r\n  CheckboxGroup,\r\n  Checkbox,\r\n  Box,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\nimport {getMovies} from \"../movies/MoviesService\";\r\nimport {getActors} from \"../actors/ActorService\";\r\n\r\nexport const CustomCheckbox = (props) => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (props.data === \"movies\") {\r\n      getMovies()\r\n        .then((res) => {\r\n          setData(res.movies);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else if (props.data === \"actors\") {\r\n      getActors()\r\n        .then((res) => {\r\n          setData(res.actors);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Box\r\n      boxShadow=\"base\"\r\n      borderRadius=\"lg\"\r\n      maxH=\"165px\"\r\n      overflow=\"auto\"\r\n      bg={useColorModeValue(\"gray.100\", \"#ffffff0a\")}\r\n    >\r\n      <CheckboxGroup {...props} colorScheme=\"teal\">\r\n        <Stack pl={6} mt={1} spacing={1}>\r\n          {data.map((item) => (\r\n            <Checkbox key={item.id} value={Number(item.id)}>\r\n              {props.data === \"movies\"\r\n                ? item.title\r\n                : item.first_name + \" \" + item.last_name}\r\n            </Checkbox>\r\n          ))}\r\n        </Stack>\r\n      </CheckboxGroup>\r\n    </Box>\r\n  );\r\n};\r\n","import {React, useContext, useState, useEffect} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Container,\r\n  Text,\r\n  Stack,\r\n  VStack,\r\n  Button,\r\n  Radio,\r\n  RadioGroup,\r\n  useToast,\r\n  FormControl,\r\n  FormLabel,\r\n  FormErrorMessage,\r\n  Input,\r\n  Center,\r\n} from \"@chakra-ui/react\";\r\nimport {CustomCheckbox} from \"../ui/CustomCheckbox\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"../styles/date-picker.css\";\r\n\r\nimport {Formik, Form, Field} from \"formik\";\r\nimport {AuthContext} from \"../auth/AuthContext\";\r\nimport {getMovieById, addMovie, editMovie} from \"./MoviesService\";\r\n\r\nconst AddMovie = (props) => {\r\n  const [initialValues, setInitialValues] = useState({\r\n    title: \"\",\r\n    genre: \"\",\r\n    release_date: \"\",\r\n    poster: \"\",\r\n    seeking_talent: false,\r\n    actors: {actor_ids: []},\r\n  });\r\n  const [selectedActors, setSelectedActors] = useState([]);\r\n  const [seekingTalent, setSeekingTalent] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n\r\n  const {token} = useContext(AuthContext);\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n  const movieId = props.match.params.movieId;\r\n  const actionType = props.match.url.includes(\"edit\") ? \"edit\" : \"add\";\r\n\r\n  useEffect(() => {\r\n    if (actionType === \"edit\") {\r\n      getMovieById(movieId).then((res) => {\r\n        if (res.success) {\r\n          let movieInitialValues = {\r\n            title: res.movie.title,\r\n            genre: res.movie.genre,\r\n            release_date: res.movie.release_date,\r\n            poster: res.movie.poster,\r\n            seeking_talent: res.movie.seeking_talent,\r\n            actors: {actor_ids: res.movie.actors.map((actor) => actor.id)},\r\n          };\r\n          setSeekingTalent(res.movie.seeking_talent);\r\n          setSelectedActors(res.movie.actors.map((actor) => actor.id));\r\n          setInitialValues(movieInitialValues);\r\n        } else {\r\n          history.push(\"/404\");\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const validate = (values) => {\r\n    const errors = {};\r\n    if (!values.title) {\r\n      errors.title = \"Required\";\r\n    }\r\n\r\n    if (!values.genre) {\r\n      errors.genre = \"Required\";\r\n    }\r\n\r\n    values.release_date = selectedDate;\r\n    if (!values.release_date) {\r\n      errors.release_date = \"Required\";\r\n    }\r\n\r\n    if (values.poster) {\r\n      try {\r\n        new URL(values.poster);\r\n      } catch (e) {\r\n        errors.poster = \"Invalid image url\";\r\n      }\r\n    }\r\n\r\n    values.seeking_talent = seekingTalent;\r\n    if (!values.seeking_talent) {\r\n      errors.seeking_talent = \"Required\";\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  const checkActors = (e) => {\r\n    let newSelectedActors = e.map((actorId) => Number(actorId));\r\n    setSelectedActors(newSelectedActors);\r\n  };\r\n\r\n  const callMovieApi = async (values, actions, actionType) => {\r\n    var res;\r\n\r\n    if (actionType === \"edit\") {\r\n      res = await editMovie(values, movieId, token);\r\n    } else {\r\n      res = await addMovie(values, token);\r\n    }\r\n    if (res.success) {\r\n      actions.setSubmitting(false);\r\n      toast({\r\n        title: actionType === \"edit\" ? \"Edit movie\" : \"Add movie\",\r\n        description:\r\n          actionType === \"edit\"\r\n            ? \"Movie information updated successfully.\"\r\n            : \"Movie added successfully.\",\r\n        status: \"success\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n    } else {\r\n      actions.setSubmitting(false);\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"An error has occured!\",\r\n        status: \"error\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      maxW=\"xl\"\r\n      position=\"relative\"\r\n      minH=\"calc(100vh - 81px)\"\r\n      py=\"20\"\r\n      centerContent\r\n    >\r\n      <Box px=\"10\" pt=\"5\">\r\n        <Text textStyle=\"title\">\r\n          {actionType === \"edit\" ? \"Edit Movie\" : \"Add a new movie\"}\r\n        </Text>\r\n      </Box>\r\n\r\n      <Formik\r\n        initialValues={initialValues}\r\n        enableReinitialize={true}\r\n        validate={validate}\r\n        onSubmit={(values, actions) => {\r\n          values.actors.actors_id = selectedActors;\r\n          values.seeking_talent = seekingTalent === \"true\" ? true : false;\r\n          if (actionType === \"edit\") {\r\n            callMovieApi(values, actions, \"edit\");\r\n          } else {\r\n            callMovieApi(values, actions, \"add\");\r\n          }\r\n        }}\r\n      >\r\n        {(props) => (\r\n          <Form>\r\n            <VStack\r\n              mt=\"16\"\r\n              spacing={8}\r\n              align=\"stretch\"\r\n              w={[\"xs\", \"sm\", \"md\", \"md\"]}\r\n            >\r\n              <Field name=\"title\">\r\n                {({field, form}) => (\r\n                  <FormControl\r\n                    isInvalid={form.errors.title && form.touched.title}\r\n                    isRequired\r\n                  >\r\n                    <FormLabel htmlFor=\"title\">Movie Title</FormLabel>\r\n                    <Input\r\n                      {...field}\r\n                      id=\"title\"\r\n                      variant=\"filled\"\r\n                      placeholder=\"title\"\r\n                    />\r\n                    <FormErrorMessage>{form.errors.title}</FormErrorMessage>\r\n                  </FormControl>\r\n                )}\r\n              </Field>\r\n              <Field name=\"genre\">\r\n                {({field, form}) => (\r\n                  <FormControl\r\n                    isInvalid={form.errors.genre && form.touched.genre}\r\n                    isRequired\r\n                  >\r\n                    <FormLabel htmlFor=\"genre\">Genre</FormLabel>\r\n                    <Input\r\n                      {...field}\r\n                      id=\"genre\"\r\n                      variant=\"filled\"\r\n                      placeholder=\"genre\"\r\n                    />\r\n                    <FormErrorMessage>{form.errors.genre}</FormErrorMessage>\r\n                  </FormControl>\r\n                )}\r\n              </Field>\r\n\r\n              <Field name=\"poster\">\r\n                {({field, form}) => (\r\n                  <FormControl\r\n                    isInvalid={form.errors.poster && form.touched.poster}\r\n                  >\r\n                    <FormLabel htmlFor=\"poster\">Poster</FormLabel>\r\n                    <Input\r\n                      {...field}\r\n                      id=\"poster\"\r\n                      variant=\"filled\"\r\n                      placeholder=\"https://\"\r\n                    />\r\n                    <FormErrorMessage>{form.errors.poster}</FormErrorMessage>\r\n                  </FormControl>\r\n                )}\r\n              </Field>\r\n\r\n              <Field name=\"release_date\">\r\n                {({field, form}) => (\r\n                  <FormControl\r\n                    isInvalid={\r\n                      form.errors.release_date && form.touched.release_date\r\n                    }\r\n                    isRequired\r\n                  >\r\n                    <FormLabel htmlFor=\"release_date\">Release Date</FormLabel>\r\n\r\n                    <ReactDatePicker\r\n                      {...field}\r\n                      selected={selectedDate}\r\n                      onChange={(date) => setSelectedDate(date)}\r\n                    ></ReactDatePicker>\r\n                    <FormErrorMessage>\r\n                      {form.errors.release_date}\r\n                    </FormErrorMessage>\r\n                  </FormControl>\r\n                )}\r\n              </Field>\r\n\r\n              <Field name=\"seeking_talent\">\r\n                {({field, form}) => (\r\n                  <FormControl\r\n                    isInvalid={\r\n                      form.errors.seeking_talent && form.touched.seeking_talent\r\n                    }\r\n                    isRequired\r\n                  >\r\n                    <FormLabel htmlFor=\"seeking_talent\">\r\n                      Seeking talent\r\n                    </FormLabel>\r\n\r\n                    <RadioGroup\r\n                      {...field}\r\n                      onChange={setSeekingTalent}\r\n                      value={seekingTalent}\r\n                    >\r\n                      <Stack direction=\"row\" spacing={5}>\r\n                        <Radio colorScheme=\"green\" value=\"true\">\r\n                          Yes\r\n                        </Radio>\r\n                        <Radio colorScheme=\"red\" value=\"false\">\r\n                          No\r\n                        </Radio>\r\n                      </Stack>\r\n                    </RadioGroup>\r\n                    <FormErrorMessage>\r\n                      {form.errors.seeking_talent}\r\n                    </FormErrorMessage>\r\n                  </FormControl>\r\n                )}\r\n              </Field>\r\n\r\n              <FormControl>\r\n                <FormLabel htmlFor=\"movies\">Actors: </FormLabel>\r\n                <CustomCheckbox\r\n                  data=\"actors\"\r\n                  value={selectedActors}\r\n                  onChange={(e) => {\r\n                    checkActors(e);\r\n                  }}\r\n                ></CustomCheckbox>\r\n              </FormControl>\r\n            </VStack>\r\n            <Center>\r\n              <Button\r\n                mt={8}\r\n                colorScheme=\"teal\"\r\n                isLoading={props.isSubmitting}\r\n                type=\"submit\"\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Center>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AddMovie;\r\n","import {React, useContext, useState, useEffect} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Container,\r\n  Text,\r\n  Stack,\r\n  VStack,\r\n  Button,\r\n  Radio,\r\n  RadioGroup,\r\n  useToast,\r\n  FormControl,\r\n  FormLabel,\r\n  FormErrorMessage,\r\n  Input,\r\n  Center,\r\n} from \"@chakra-ui/react\";\r\nimport {Formik, Form, Field} from \"formik\";\r\nimport {AuthContext} from \"../auth/AuthContext\";\r\nimport {CustomCheckbox} from \"../ui/CustomCheckbox\";\r\nimport {getActorById, addActor, editActor} from \"./ActorService\";\r\n\r\nconst AddActor = (props) => {\r\n  const [initialValues, setInitialValues] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    age: \"\",\r\n    gender: \"\",\r\n    image_link: \"\",\r\n    seeking_role: false,\r\n    movies: {movie_ids: []},\r\n  });\r\n  const [selectedMovies, setSelectedMovies] = useState([]);\r\n  const [seekingRole, setSeekingRole] = useState(false);\r\n\r\n  const {token} = useContext(AuthContext);\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n  const actorId = props.match.params.actorId;\r\n  const actionType = props.match.url.includes(\"edit\") ? \"edit\" : \"add\";\r\n\r\n  useEffect(() => {\r\n    if (actionType === \"edit\") {\r\n      getActorById(actorId).then((res) => {\r\n        if (res.success) {\r\n          let actorInitialValues = {\r\n            first_name: res.actor.first_name,\r\n            last_name: res.actor.last_name,\r\n            age: res.actor.age,\r\n            gender: res.actor.gender,\r\n            image_link: res.actor.image_link,\r\n            seeking_role: res.actor.seeking_role,\r\n            movies: {movie_ids: res.actor.movies.map((movie) => movie.id)},\r\n          };\r\n          setSeekingRole(res.actor.seeking_role);\r\n          setSelectedMovies(res.actor.movies.map((movie) => movie.id));\r\n          setInitialValues(actorInitialValues);\r\n        } else {\r\n          history.push(\"/404\");\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const validate = (values) => {\r\n    const errors = {};\r\n    if (!values.first_name) {\r\n      errors.first_name = \"Required\";\r\n    }\r\n\r\n    if (!values.last_name) {\r\n      errors.last_name = \"Required\";\r\n    }\r\n\r\n    if (!values.age) {\r\n      errors.age = \"Required\";\r\n    } else if (isNaN(values.age) || values.age > 100) {\r\n      errors.age = \"Not a valid age value\";\r\n    }\r\n\r\n    if (!values.gender) {\r\n      errors.gender = \"Required\";\r\n    }\r\n\r\n    if (values.image_link) {\r\n      try {\r\n        new URL(values.image_link);\r\n      } catch (e) {\r\n        errors.image_link = \"Invalid image url\";\r\n      }\r\n    }\r\n    values.seeking_role = seekingRole;\r\n    if (!values.seeking_role) {\r\n      errors.seeking_role = \"Required\";\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  const checkMovies = (e) => {\r\n    let newSelectedMovies = e.map((i) => Number(i));\r\n    setSelectedMovies(newSelectedMovies);\r\n  };\r\n\r\n  const callActorApi = async (values, actions, actionType) => {\r\n    var res;\r\n\r\n    if (actionType === \"edit\") {\r\n      res = await editActor(values, actorId, token);\r\n    } else {\r\n      res = await addActor(values, token);\r\n    }\r\n    if (res.success) {\r\n      actions.setSubmitting(false);\r\n      toast({\r\n        title: actionType === \"edit\" ? \"Edit actor\" : \"Add actor\",\r\n        description:\r\n          actionType === \"edit\"\r\n            ? \"Actor information updated successfully.\"\r\n            : \"Actor added successfully.\",\r\n        status: \"success\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n    } else {\r\n      actions.setSubmitting(false);\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"An error has occured!\",\r\n        status: \"error\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      maxW=\"xl\"\r\n      position=\"relative\"\r\n      minH=\"calc(100vh - 81px)\"\r\n      py=\"20\"\r\n      centerContent\r\n    >\r\n      <Box px=\"10\" pt=\"5\">\r\n        <Text textStyle=\"title\">\r\n          {actionType === \"edit\" ? \"Edit actor\" : \"Enroll a new actor\"}\r\n        </Text>\r\n      </Box>\r\n\r\n      <Formik\r\n        initialValues={initialValues}\r\n        enableReinitialize={true}\r\n        validate={validate}\r\n        onSubmit={(values, actions) => {\r\n          values.age = Number(values.age);\r\n          values.movies.movie_ids = selectedMovies;\r\n          values.seeking_role = seekingRole === \"true\" ? true : false;\r\n          if (actionType === \"edit\") {\r\n            callActorApi(values, actions, \"edit\");\r\n          } else {\r\n            callActorApi(values, actions, \"add\");\r\n          }\r\n        }}\r\n      >\r\n        {(props) => (\r\n          <Form>\r\n            <VStack\r\n              mt=\"16\"\r\n              spacing={8}\r\n              align=\"stretch\"\r\n              w={[\"xs\", \"sm\", \"md\", \"md\"]}\r\n            >\r\n              <Field name=\"first_name\">\r\n                {({field, form}) => (\r\n                  <FormControl\r\n                    isInvalid={\r\n                      form.errors.first_name && form.touched.first_name\r\n                    }\r\n                    isRequired\r\n                  >\r\n                    <FormLabel htmlFor=\"first_name\">First Name</FormLabel>\r\n                    <Input\r\n                      {...field}\r\n                      id=\"first_name\"\r\n                      variant=\"filled\"\r\n                      placeholder=\"First name\"\r\n                    />\r\n                    <FormErrorMessage>\r\n                      {form.errors.first_name}\r\n                    </FormErrorMessage>\r\n                  </FormControl>\r\n                )}\r\n              </Field>\r\n              <Field name=\"last_name\">\r\n                {({field, form}) => (\r\n                  <FormControl\r\n                    isInvalid={form.errors.last_name && form.touched.last_name}\r\n                    isRequired\r\n                  >\r\n                    <FormLabel htmlFor=\"last_name\">Last Name</FormLabel>\r\n                    <Input\r\n                      {...field}\r\n                      id=\"last_name\"\r\n                      variant=\"filled\"\r\n                      placeholder=\"Last name\"\r\n                    />\r\n                    <FormErrorMessage>{form.errors.last_name}</FormErrorMessage>\r\n                  </FormControl>\r\n                )}\r\n              </Field>\r\n\r\n              <Field name=\"age\">\r\n                {({field, form}) => (\r\n                  <FormControl\r\n                    isInvalid={form.errors.age && form.touched.age}\r\n                    isRequired\r\n                  >\r\n                    <FormLabel htmlFor=\"age\">Age</FormLabel>\r\n                    <Input\r\n                      {...field}\r\n                      id=\"age\"\r\n                      variant=\"filled\"\r\n                      placeholder=\"age\"\r\n                    />\r\n                    <FormErrorMessage>{form.errors.age}</FormErrorMessage>\r\n                  </FormControl>\r\n                )}\r\n              </Field>\r\n\r\n              <Field name=\"gender\">\r\n                {({field, form}) => (\r\n                  <FormControl\r\n                    isInvalid={form.errors.gender && form.touched.gender}\r\n                    isRequired\r\n                  >\r\n                    <FormLabel htmlFor=\"gender\">Gender</FormLabel>\r\n                    <Input\r\n                      {...field}\r\n                      id=\"gender\"\r\n                      variant=\"filled\"\r\n                      placeholder=\"gender\"\r\n                    />\r\n                    <FormErrorMessage>{form.errors.gender}</FormErrorMessage>\r\n                  </FormControl>\r\n                )}\r\n              </Field>\r\n\r\n              <Field name=\"image_link\">\r\n                {({field, form}) => (\r\n                  <FormControl\r\n                    isInvalid={\r\n                      form.errors.image_link && form.touched.image_link\r\n                    }\r\n                  >\r\n                    <FormLabel htmlFor=\"image_link\">Profile image</FormLabel>\r\n                    <Input\r\n                      {...field}\r\n                      id=\"image_link\"\r\n                      variant=\"filled\"\r\n                      placeholder=\"https://\"\r\n                    />\r\n                    <FormErrorMessage>\r\n                      {form.errors.image_link}\r\n                    </FormErrorMessage>\r\n                  </FormControl>\r\n                )}\r\n              </Field>\r\n\r\n              <Field name=\"seeking_role\">\r\n                {({field, form}) => (\r\n                  <FormControl\r\n                    isInvalid={\r\n                      form.errors.seeking_role && form.touched.seeking_role\r\n                    }\r\n                    isRequired\r\n                  >\r\n                    <FormLabel htmlFor=\"seeking_role\">Seeking roles</FormLabel>\r\n\r\n                    <RadioGroup\r\n                      {...field}\r\n                      onChange={setSeekingRole}\r\n                      value={seekingRole}\r\n                    >\r\n                      <Stack direction=\"row\" spacing={5}>\r\n                        <Radio colorScheme=\"green\" value=\"true\">\r\n                          Yes\r\n                        </Radio>\r\n                        <Radio colorScheme=\"red\" value=\"false\">\r\n                          No\r\n                        </Radio>\r\n                      </Stack>\r\n                    </RadioGroup>\r\n                    <FormErrorMessage>\r\n                      {form.errors.seeking_role}\r\n                    </FormErrorMessage>\r\n                  </FormControl>\r\n                )}\r\n              </Field>\r\n\r\n              <FormControl>\r\n                <FormLabel htmlFor=\"movies\">Movies: </FormLabel>\r\n                <CustomCheckbox\r\n                  data=\"movies\"\r\n                  value={selectedMovies}\r\n                  onChange={(e) => {\r\n                    checkMovies(e);\r\n                  }}\r\n                ></CustomCheckbox>\r\n              </FormControl>\r\n            </VStack>\r\n            <Center>\r\n              <Button\r\n                mt={8}\r\n                colorScheme=\"teal\"\r\n                isLoading={props.isSubmitting}\r\n                type=\"submit\"\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Center>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AddActor;\r\n","import React from \"react\";\r\nimport {Link as ReactLink} from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Container,\r\n  Text,\r\n  Link,\r\n} from \"@chakra-ui/react\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <Container\r\n      maxW=\"xl\"\r\n      pt=\"20\"\r\n      px=\"20\"\r\n      position=\"relative\"\r\n      minH=\"calc(100vh - 81px)\"\r\n      centerContent\r\n    >\r\n      <Box mt=\"20\" textAlign=\"center\">\r\n        <Text textStyle=\"heading\">404</Text>\r\n        <Text textStyle=\"title\" my=\"10\">\r\n          Not Found\r\n        </Text>\r\n        <Link as={ReactLink} to=\"/\" textStyle=\"links\">\r\n          Go home\r\n        </Link>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import {Box, Link} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Box as=\"footer\" textAlign=\"center\" position=\"absolute\" bottom=\"2\" w=\"100%\">\r\n      <Link\r\n        href=\"https://github.com/maryamradd/fsnd-CastingAgency\"\r\n        isExternal\r\n        decoration=\"none\"\r\n        fontSize=\"sm\"\r\n        opacity=\"0.35\"\r\n        _hover={{decoration: \"none\", opacity: 0.75}}\r\n      >\r\n        view src on Github\r\n      </Link>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport PrivateRoute from \"./auth/PrivateRoute\";\nimport AuthProvider from \"./auth/AuthContext\";\nimport Actors from \"./actors/Actors\";\nimport Navbar from \"./ui/Navbar\";\nimport Home from \"./ui/Home\";\nimport ActorPage from \"./actors/ActorPage\";\nimport Movies from \"./movies/Movies\";\nimport MoviePage from \"./movies/MoviePage\";\nimport AddMovie from \"./movies/AddMovie\";\nimport AddActor from \"./actors/AddActor\";\nimport NotFound from \"./ui/NotFound\";\nimport Footer from \"./ui/Footer\";\nfunction App() {\n  return (\n    <AuthProvider>\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/movies\" component={Movies} />\n          <PrivateRoute exact path=\"/movies/add\" component={AddMovie} />\n          <Route exact path=\"/movies/:movieId\" component={MoviePage} />\n          <PrivateRoute\n            exact\n            path=\"/movies/:movieId/edit\"\n            component={AddMovie}\n          />\n          <Route exact path=\"/actors\" component={Actors} />\n          <PrivateRoute exact path=\"/actors/add\" component={AddActor} />\n          <Route exact path=\"/actors/:actorId\" component={ActorPage} />\n          <PrivateRoute\n            exact\n            path=\"/actors/:actorId/edit\"\n            component={AddActor}\n          />\n          <Route component={NotFound} />\n        </Switch>\n        <Footer />\n      </Router>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport {useHistory, Redirect} from \"react-router-dom\";\r\nimport {Auth0Provider} from \"@auth0/auth0-react\";\r\n\r\nconst Auth0ProviderWithHistory = ({children}) => {\r\n  const domain = process.env.REACT_APP_AUTH0_DOMAIN;\r\n  const clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\r\n  const audience = process.env.REACT_APP_AUTH0_AUDIENCE;\r\n  const history = useHistory();\r\n\r\n  const onRedirectCallback = (appState) => {\r\n    console.log(appState);\r\n    console.log(window.location.href);\r\n    window.location.href = process.env.REACT_APP_URL;\r\n  };\r\n\r\n  return (\r\n    <Auth0Provider\r\n      domain={domain}\r\n      clientId={clientId}\r\n      redirectUri={process.env.REACT_APP_URL}\r\n      onRedirectCallback={onRedirectCallback}\r\n      audience={audience}\r\n    >\r\n      {children}\r\n    </Auth0Provider>\r\n  );\r\n};\r\n\r\nexport default Auth0ProviderWithHistory;\r\n","import {extendTheme} from \"@chakra-ui/react\";\r\nimport {mode} from \"@chakra-ui/theme-tools\";\r\n\r\nconst customTheme = extendTheme({\r\n  styles: {\r\n    global: (props) => ({\r\n      body: {\r\n        color: mode(\"gray.700\", \"whiteAlpha.900\")(props),\r\n        fontFamily: \"Lora, serif\",\r\n        fontWeights: {\r\n          normal: 400,\r\n          medium: 500,\r\n          bold: 700,\r\n        },\r\n      },\r\n      label: {color: mode(\"gray.700\", \"gray.500\")(props)},\r\n    }),\r\n  },\r\n  textStyles: {\r\n    heading: {\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n      letterSpacing: \"-0.015em\",\r\n      lineHeight: \"1.24\",\r\n      fontSize: {base: \"2rem\", md: \"3.5rem\"},\r\n    },\r\n    subheading: {\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n      letterSpacing: \"-0.015em\",\r\n      lineHeight: \"1.24\",\r\n      fontSize: {base: \"1.70rem\", md: \"2.70rem\"},\r\n    },\r\n    title: {\r\n      textAlign: \"center\",\r\n      fontWeight: \"semibold\",\r\n      letterSpacing: \"-0.015em\",\r\n      lineHeight: \"1.24\",\r\n      fontSize: {base: \"1.60rem\", md: \"2.60rem\"},\r\n    },\r\n    info: {\r\n      textAlign: \"center\",\r\n      fontWeight: \"regular\",\r\n      letterSpacing: \"0.015em\",\r\n      lineHeight: \"1.55\",\r\n      fontSize: {base: \"1.15rem\", md: \"1.25rem\"},\r\n    },\r\n    links: {\r\n      color: \"teal.500\",\r\n      fontWeight: \"semibold\",\r\n      transition: \"color 0.15s\",\r\n      transitionTimingFunction: \"ease-out\",\r\n      _hover: {\r\n        color: \"teal.600\",\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default customTheme;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Auth0ProviderWithHistory from \"./auth/Auth0ProviderWithHistory\";\nimport {ChakraProvider} from \"@chakra-ui/react\";\nimport customTheme from \"./styles/theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Auth0ProviderWithHistory>\n      <ChakraProvider theme={customTheme}>\n        <App />\n      </ChakraProvider>\n    </Auth0ProviderWithHistory>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}