{"version":3,"sources":["ui/ActorImageFallback.js","actors/ActorCard.js","actors/ActorService.js","actors/Actors.js","ui/Navbar.js","ui/Home.js","actors/ActorPage.js","ui/MoviePosterFallback.js","movies/MovieCard.js","movies/MoviesService.js","movies/Movies.js","movies/MoviePage.js","ui/CustomCheckbox.js","movies/AddMovie.js","actors/AddActor.js","ui/NotFound.js","App.js","reportWebVitals.js","auth/Auth0ProviderWithHistory.js","styles/theme.js","index.js"],"names":["ImageFallback","ActorCard","props","actor","id","first_name","last_name","age","gender","image_link","seeking_role","role","to","maxW","w","h","rounded","borderRadius","boxShadow","bg","useColorModeValue","_groupHover","transform","overflow","src","alt","fallback","objectFit","boxSize","pb","pt","pl","mt","fontWeight","as","lineHeight","isTruncated","d","alignItems","color","letterSpacing","fontSize","textTransform","opacity","colorScheme","ml","REACT_APP_API_URL","process","getActors","axios","headers","then","res","data","catch","err","response","console","log","request","getActorById","apiURL","Actors","useState","actors","setActors","toast","useToast","useEffect","title","description","status","duration","isClosable","columns","spacing","textStyle","variant","Add","pr","p","map","Navbar","useColorMode","colorMode","toggleColorMode","useAuth0","loginWithRedirect","logout","user","isAuthenticated","isLoading","px","borderBottom","borderColor","onClick","Sun","Moon","isLoaded","py","mr","size","picture","loading","_hover","cursor","returnTo","window","location","origin","Home","ActorPage","lastname","movies","actorDetails","setActorDetails","deleteIsOpen","setDeleteIsOpen","cancelRef","useRef","actorId","match","params","deleteActorConfirm","method","deleteActor","success","centerContent","my","movie","ReactLink","isOpen","leastDestructiveRef","onClose","ref","PosterFallback","MovieCard","poster","release_date","position","textAlign","transition","backgroundImage","substring","slice","i","length","Fragment","mx","getMovies","getMovieById","addMovie","body","token","Authorization","editMovie","movieId","Movies","setMovies","MoviePage","genre","seeking_talent","movieDetails","setMovieDetails","deleteMovieConfirm","deleteMovie","CustomCheckbox","setData","maxH","item","value","Number","AddMovie","getAccessTokenSilently","actor_ids","initialValues","setInitialValues","selectedActors","setSelectedActors","seekingTalent","setSeekingTalent","Date","selectedDate","setSelectedDate","actionType","movieInitialValues","callAddMovie","values","actions","a","setSubmitting","callEditMovie","enableReinitialize","validate","errors","onSubmit","actors_id","align","name","field","form","isInvalid","touched","isRequired","htmlFor","placeholder","selected","onChange","date","direction","e","newSelectedActors","checkActors","isSubmitting","type","AddActor","movie_ids","selectedMovies","setSelectedMovies","seekingRole","setSeekingRole","actorInitialValues","isNaN","URL","editActor","newSelectedMovies","checkMovies","NotFound","App","exact","path","component","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Auth0ProviderWithHistory","children","history","useHistory","domain","clientId","redirectUri","onRedirectCallback","appState","push","pathname","audience","customTheme","extendTheme","styles","global","mode","fontFamily","fontWeights","normal","medium","bold","label","textStyles","heading","base","md","subheading","info","links","transitionTimingFunction","ReactDOM","StrictMode","theme","document","getElementById"],"mappings":"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","file":"static/js/main.a0df45f1.chunk.js","sourcesContent":["export const ImageFallback = () => {\r\n  return (\r\n    <div>\r\n      <div>gkdfjoilfffffffffffffffffffffffjsofjo</div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Image,\r\n  Badge,\r\n  Container,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport {ImageFallback} from \"../ui/ActorImageFallback\";\r\n\r\nconst ActorCard = (props) => {\r\n  const {\r\n    id,\r\n    first_name,\r\n    last_name,\r\n    age,\r\n    gender,\r\n    image_link,\r\n    seeking_role,\r\n  } = props.actor;\r\n\r\n  return (\r\n    <Container role=\"group\">\r\n      <NavLink to={`/actors/${id}`}>\r\n        <Box\r\n          maxW=\"md\"\r\n          w=\"250px\"\r\n          h=\"260px\"\r\n          rounded=\"lg\"\r\n          borderRadius=\"sm\"\r\n          boxShadow=\"md\"\r\n          bg={useColorModeValue(\"white\", \"gray.700\")}\r\n          _groupHover={{\r\n            transform: \"translateY( -3px ) scale( 1.02 ) \",\r\n            boxShadow: \"2xl\",\r\n          }}\r\n        >\r\n          <Box w=\"250px\" h=\"180px\" overflow=\"hidden\">\r\n            <Image\r\n              src={image_link}\r\n              alt=\"actor image\"\r\n              fallback={<ImageFallback />}\r\n              objectFit=\"cover\"\r\n              boxSize=\"250px\"\r\n            />\r\n          </Box>\r\n          <Box pb=\"6\" pt=\"2\" pl=\"4\">\r\n            <Box\r\n              mt=\"1\"\r\n              fontWeight=\"semibold\"\r\n              as=\"h4\"\r\n              lineHeight=\"tight\"\r\n              isTruncated\r\n            >\r\n              {first_name} {last_name}\r\n            </Box>\r\n            <Box d=\"flex\" alignItems=\"baseline\">\r\n              <Box\r\n                mt=\"4px\"\r\n                color=\"gray.500\"\r\n                fontWeight=\"semibold\"\r\n                letterSpacing=\"wide\"\r\n                fontSize=\"xs\"\r\n                textTransform=\"uppercase\"\r\n              >\r\n                {age} yrs\r\n                <Box as=\"span\" opacity={0.7} pl=\"4px\">\r\n                  &bull; {gender}\r\n                </Box>\r\n                {seeking_role ? (\r\n                  <Badge colorScheme=\"teal\" ml=\"19px\">\r\n                    Seeking role\r\n                  </Badge>\r\n                ) : null}\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </NavLink>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ActorCard;\r\n","import axios from \"axios\";\r\n\r\nconst {REACT_APP_API_URL} = process.env;\r\n\r\nexport const getActors = () => {\r\n  const apiURL = REACT_APP_API_URL + \"/actors\";\r\n  return axios(apiURL, {\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((res) => res.data)\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        console.log(err.response);\r\n      } else if (err.request) {\r\n        // client never received a response, or request never left\r\n        console.log(err.request);\r\n      } else {\r\n        // anything else\r\n      }\r\n    });\r\n};\r\n\r\nexport const getActorById = (id) => {\r\n  const apiURL = REACT_APP_API_URL + \"/actors/\" + id;\r\n  return axios(apiURL, {\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((res) => res.data)\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        console.log(err.response);\r\n      } else if (err.request) {\r\n        // client never received a response, or request never left\r\n        console.log(err.request);\r\n      } else {\r\n        // anything else\r\n      }\r\n    });\r\n};\r\n\r\nexport const deleteActor = (id) => {\r\n  const apiURL = REACT_APP_API_URL + \"/actors/\" + id;\r\n  return axios(apiURL, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((res) => res.data)\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        return err.response.data;\r\n      } else if (err.request) {\r\n        // client never received a response, or request never left\r\n        //console.log(err.request);\r\n      } else {\r\n        // anything else\r\n      }\r\n    });\r\n};\r\n\r\nexport const addActor = (body) => {\r\n  const apiURL = REACT_APP_API_URL + \"/actors\";\r\n  return axios(apiURL, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n    data: body,\r\n  })\r\n    .then((res) => res.data)\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        return err.response.data;\r\n      } else if (err.request) {\r\n        // client never received a response, or request never left\r\n        //console.log(err.request);\r\n      } else {\r\n        // anything else\r\n      }\r\n    });\r\n};\r\n\r\nexport const editActor = (body, actorId) => {\r\n  const apiURL = REACT_APP_API_URL + \"/actors/\" + actorId;\r\n  return axios(apiURL, {\r\n    method: \"PATCH\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n    data: body,\r\n  })\r\n    .then((res) => res.data)\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        return err.response.data;\r\n      } else if (err.request) {\r\n        // client never received a response, or request never left\r\n        //console.log(err.request);\r\n      } else {\r\n        // anything else\r\n      }\r\n    });\r\n};\r\n","import {React, useState, useEffect} from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport ActorCard from \"./ActorCard\";\r\nimport {\r\n  Box,\r\n  SimpleGrid,\r\n  Flex,\r\n  Container,\r\n  Button,\r\n  Center,\r\n  Text,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport {AddIcon} from \"@chakra-ui/icons\";\r\n\r\nimport {getActors} from \"./ActorService\";\r\n\r\nconst Actors = () => {\r\n  const [actors, setActors] = useState([]);\r\n  const toast = useToast();\r\n\r\n  useEffect(() => {\r\n    getActors()\r\n      .then((res) => {\r\n        setActors(res.actors);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast({\r\n          title: \"Error\",\r\n          description: \"An error has occured, Please try again later.\",\r\n          status: \"error\",\r\n          duration: 3000,\r\n          isClosable: true,\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Container maxW=\"xl\">\r\n        <SimpleGrid columns={2} spacing={[52, 36]} pt=\"20\">\r\n          <Box>\r\n            <Center h=\"80px\">\r\n              <Text textStyle=\"heading\">Acotrs</Text>\r\n            </Center>\r\n          </Box>\r\n          <Box>\r\n            <Center h=\"80px\">\r\n              <NavLink to=\"/actors/add\">\r\n                <Button colorScheme=\"teal\" variant=\"solid\">\r\n                  <AddIcon w={5} h={5} pr=\"2\"></AddIcon> Add Actor\r\n                </Button>\r\n              </NavLink>\r\n            </Center>\r\n          </Box>\r\n        </SimpleGrid>\r\n        <Center>\r\n          <Flex p=\"10\" mt=\"5\">\r\n            <SimpleGrid columns={[1, 2, 3]} spacing=\"40px\">\r\n              {actors.map((actor) => {\r\n                return (\r\n                  <Box key={actor.id}>\r\n                    <ActorCard actor={actor}></ActorCard>\r\n                  </Box>\r\n                );\r\n              })}\r\n            </SimpleGrid>\r\n          </Flex>\r\n        </Center>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Actors;\r\n","import {React, useState, useEffect} from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport {\r\n  Flex,\r\n  Spacer,\r\n  Box,\r\n  useColorMode,\r\n  useColorModeValue,\r\n  VStack,\r\n  Skeleton,\r\n} from \"@chakra-ui/react\";\r\nimport {Avatar, AvatarBadge, Button} from \"@chakra-ui/react\";\r\nimport {SunIcon, MoonIcon} from \"@chakra-ui/icons\";\r\nimport {\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  PopoverHeader,\r\n  PopoverBody,\r\n  PopoverFooter,\r\n  PopoverArrow,\r\n  PopoverCloseButton,\r\n  Portal,\r\n} from \"@chakra-ui/react\";\r\nexport const Navbar = () => {\r\n  const {colorMode, toggleColorMode} = useColorMode();\r\n  //const [userMetadata, setUserMetadata] = useState(null);\r\n  //const isAuthenticated = false;\r\n  \r\n  const {\r\n    loginWithRedirect,\r\n    logout,\r\n    user,\r\n    isAuthenticated,\r\n    isLoading,\r\n    \r\n  } = useAuth0();\r\n\r\n\r\n  /* useEffect(() => {\r\n    const getUserMetadata = async () => {\r\n      const {REACT_APP_AUTH0_DOMAIN} = process.env;\r\n\r\n      try {\r\n        const accessToken = await getAccessTokenSilently({\r\n          audience: `https://${REACT_APP_AUTH0_DOMAIN}/api/v2/`,\r\n          scope: \"read:current_user\",\r\n        });\r\n        console.log(accessToken);\r\n        const userDetailsByIdUrl = `https://${REACT_APP_AUTH0_DOMAIN}/api/v2/users/${user.sub}`;\r\n\r\n        const metadataResponse = await fetch(userDetailsByIdUrl, {\r\n          headers: {\r\n            Authorization: `Bearer ${accessToken}`,\r\n          },\r\n        });\r\n\r\n        const {user_metadata} = await metadataResponse.json();\r\n\r\n        setUserMetadata(user_metadata);\r\n      } catch (e) {\r\n        console.log(e.message);\r\n      }\r\n    };\r\n\r\n    getUserMetadata();\r\n  }, []);\r\n */\r\n  //console.log(userMetadata);\r\n  return (\r\n    <div>\r\n      <Flex\r\n        pt=\"6\"\r\n        pb=\"4\"\r\n        px=\"8\"\r\n        borderBottom=\"1px\"\r\n        borderColor={useColorModeValue(\"gray.200\", \"gray.700\")}\r\n      >\r\n        <Box px=\"4\">\r\n          <NavLink to=\"/\">CA</NavLink>\r\n        </Box>\r\n        <Box px=\"4\">\r\n          <NavLink to=\"/actors\">\r\n            <Button colorScheme=\"teal\" variant=\"ghost\" borderRadius=\"8px\">\r\n              Actors\r\n            </Button>\r\n          </NavLink>\r\n        </Box>\r\n        <Box px=\"4\">\r\n          <NavLink to=\"/movies\">\r\n            <Button colorScheme=\"teal\" variant=\"ghost\" borderRadius=\"8px\">\r\n              Movies\r\n            </Button>\r\n          </NavLink>\r\n        </Box>\r\n        <Spacer />\r\n        <Box>\r\n          <Button onClick={toggleColorMode} variant=\"ghost\">\r\n            {colorMode === \"light\" ? (\r\n              <SunIcon w={4} h={4} color=\"gray.600\" />\r\n            ) : (\r\n              <MoonIcon w={4} h={4} color=\"gray.600\" />\r\n            )}\r\n          </Button>\r\n        </Box>\r\n        <Skeleton isLoaded={!isLoading}>\r\n          {isAuthenticated ? (\r\n            <Box px=\"4\" py=\"1\">\r\n              <Popover>\r\n                <PopoverTrigger>\r\n                  <Avatar\r\n                    mr=\"16px\"\r\n                    size=\"sm\"\r\n                    src={user.picture}\r\n                    loading=\"lazy\"\r\n                    _hover={{cursor: \"pointer\"}}\r\n                  />\r\n                </PopoverTrigger>\r\n                <Portal>\r\n                  <PopoverContent>\r\n                    <PopoverArrow />\r\n\r\n                    <PopoverBody w=\"xs\">\r\n                      <VStack w=\"xs\">\r\n                        <NavLink to=\"/\">Settings</NavLink>\r\n                        <Button\r\n                          colorScheme=\"teal\"\r\n                          onClick={() =>\r\n                            logout({returnTo: window.location.origin})\r\n                          }\r\n                        >\r\n                          Log out\r\n                        </Button>\r\n                      </VStack>\r\n                    </PopoverBody>\r\n                  </PopoverContent>\r\n                </Portal>\r\n              </Popover>\r\n            </Box>\r\n          ) : (\r\n            <Box px=\"4\">\r\n              <Button colorScheme=\"teal\" onClick={() => loginWithRedirect()}>\r\n                Log in\r\n              </Button>\r\n            </Box>\r\n          )}\r\n        </Skeleton>\r\n      </Flex>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Home = () => {\r\n  return <div>hoome</div>;\r\n};\r\n","import {React, useState, useRef, useEffect} from \"react\";\r\nimport {Link as ReactLink, NavLink} from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Container,\r\n  Image,\r\n  Text,\r\n  Stack,\r\n  Link,\r\n  Button,\r\n  Spacer,\r\n  Center,\r\n  Badge,\r\n} from \"@chakra-ui/react\";\r\nimport {\r\n  AlertDialog,\r\n  AlertDialogBody,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogContent,\r\n  AlertDialogOverlay,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport {getActorById, deleteActor} from \"./ActorService\";\r\nimport {ImageFallback} from \"../ui/ActorImageFallback\";\r\n\r\nconst ActorPage = (props) => {\r\n  const [actorDetails, setActorDetails] = useState({\r\n    id: 0,\r\n    first_name: \"\",\r\n    lastname: \"\",\r\n    age: \"\",\r\n    gender: \"\",\r\n    image_link: \"\",\r\n    seeking_role: false,\r\n    movies: [],\r\n  });\r\n  const [deleteIsOpen, setDeleteIsOpen] = useState(false);\r\n  const cancelRef = useRef();\r\n  const toast = useToast();\r\n  const actorId = props.match.params.actorId;\r\n\r\n  useEffect(() => {\r\n    getActorById(actorId).then((res) => {\r\n      setActorDetails(res.actor);\r\n    });\r\n  }, []);\r\n\r\n  const deleteActorConfirm = () => {\r\n    deleteActor(actorId).then((res) => {\r\n      if (res.success) {\r\n        toast({\r\n          title: \"Actor deleted\",\r\n          description: \"Selected actor deleted successfully\",\r\n          status: \"success\",\r\n          duration: 3000,\r\n          isClosable: true,\r\n        });\r\n        setDeleteIsOpen(false);\r\n      } else {\r\n        toast({\r\n          title: \"Error\",\r\n          description: \"An error has occured, Please try again later.\",\r\n          status: \"error\",\r\n          duration: 3000,\r\n          isClosable: true,\r\n        });\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <Container maxW=\"xl\" centerContent>\r\n      <Box px=\"10\" pt=\"10\">\r\n        <Text textStyle=\"title\">\r\n          {actorDetails.first_name} {actorDetails.last_name}\r\n        </Text>\r\n      </Box>\r\n      <Stack px=\"10\" py=\"5\" textStyle=\"info\">\r\n        <Center>\r\n          <Box boxSize=\"xs\" overflow=\"hidden\" boxShadow=\"lg\">\r\n            <Image\r\n              maxW=\"xs\"\r\n              objectFit=\"cover\"\r\n              src={actorDetails.image_link}\r\n              alt=\"Actor image\"\r\n              fallback={<ImageFallback />}\r\n            />\r\n          </Box>\r\n        </Center>\r\n\r\n        {actorDetails.seeking_role ? <Badge>Seeking role</Badge> : null}\r\n\r\n        <Center>\r\n          <Container maxW=\"3xs\" my=\"4\">\r\n            <Flex>\r\n              <Text>Age: </Text>\r\n              <Spacer />\r\n              <Text>{actorDetails.age} yrs</Text>\r\n            </Flex>\r\n            <Flex>\r\n              <Text>Gender: </Text>\r\n              <Spacer />\r\n              <Text>{actorDetails.gender} </Text>\r\n            </Flex>\r\n          </Container>\r\n        </Center>\r\n\r\n        <Text>Movies: </Text>\r\n        {actorDetails.movies.map((movie) => {\r\n          return (\r\n            <Link\r\n              as={ReactLink}\r\n              to={`/movies/${movie.id}`}\r\n              key={movie.id}\r\n              textStyle=\"links\"\r\n            >\r\n              {movie.title}\r\n            </Link>\r\n          );\r\n        })}\r\n      </Stack>\r\n      <Flex p=\"2\">\r\n        <NavLink to={`/actors/${actorId}/edit`}>\r\n          <Button mr=\"2\">Edit</Button>\r\n        </NavLink>\r\n        <Button ml=\"2\" bg=\"red.500\" onClick={() => setDeleteIsOpen(true)}>\r\n          Delete\r\n        </Button>\r\n      </Flex>\r\n      <AlertDialog\r\n        isOpen={deleteIsOpen}\r\n        leastDestructiveRef={cancelRef}\r\n        onClose={() => setDeleteIsOpen(false)}\r\n      >\r\n        <AlertDialogOverlay>\r\n          <AlertDialogContent>\r\n            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n              Delete Actor\r\n            </AlertDialogHeader>\r\n\r\n            <AlertDialogBody>\r\n              Are you sure? You can't undo this action afterwards.\r\n            </AlertDialogBody>\r\n\r\n            <AlertDialogFooter>\r\n              <Button ref={cancelRef} onClick={() => setDeleteIsOpen(false)}>\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                colorScheme=\"red\"\r\n                onClick={() => deleteActorConfirm()}\r\n                ml={3}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </AlertDialogFooter>\r\n          </AlertDialogContent>\r\n        </AlertDialogOverlay>\r\n      </AlertDialog>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ActorPage;\r\n","import {Box} from \"@chakra-ui/react\";\r\n\r\nexport const PosterFallback = () => {\r\n  return (\r\n    <Box maxW=\"xs\">\r\n      <div>\r\n        <div>gkdfjoilfffffffffffffffffffffffjsofjo</div>\r\n      </div>\r\n    </Box>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Box, Image, Container, Text, useColorModeValue} from \"@chakra-ui/react\";\r\nimport {PosterFallback} from \"../ui/MoviePosterFallback\";\r\n\r\nconst MovieCard = (props) => {\r\n  const {id, title, poster, release_date, actors} = props.movie;\r\n\r\n  return (\r\n    <Container>\r\n      <Box\r\n        maxW=\"md\"\r\n        w=\"250px\"\r\n        h=\"350px\"\r\n        rounded=\"lg\"\r\n        borderRadius=\"sm\"\r\n        boxShadow=\"md\"\r\n        role=\"group\"\r\n        bg={useColorModeValue(\"white\", \"gray.700\")}\r\n      >\r\n        <NavLink to={`/movies/${id}`}>\r\n          <Box\r\n            position=\"absolute\"\r\n            w=\"250px\"\r\n            h=\"350px\"\r\n            py=\"70px\"\r\n            textAlign=\"center\"\r\n            color=\"gray.300\"\r\n            fontWeight=\"semibold\"\r\n            letterSpacing=\"5px\"\r\n            fontSize=\"xs\"\r\n            opacity=\"0\"\r\n            textTransform=\"uppercase\"\r\n            _groupHover={{\r\n              opacity: 1,\r\n              transition: \"opacity 0.2s ease-in\",\r\n              backgroundImage:\r\n                \"linear-gradient(to bottom, hsla(0, 0%, 0%, 0) 0%,hsla(0, 0%, 0%, 0.762) 94.1%,hsla(0, 0%, 0%, 0.790) 100%)\",\r\n            }}\r\n          >\r\n            {release_date.substring(7, 16)}\r\n            <Text as=\"p\" mt=\"200px\" letterSpacing=\"2px\">\r\n              {actors.slice(0, 3).map((actor, i) => {\r\n                if (i === actors.length - 1 || i === 2) {\r\n                  return (\r\n                    <React.Fragment key={actor.id}>\r\n                      {\" \"}\r\n                      {actor.last_name}\r\n                    </React.Fragment>\r\n                  );\r\n                } else {\r\n                  return (\r\n                    <React.Fragment key={actor.id}>\r\n                      {\" \"}\r\n                      {actor.last_name} &bull;\r\n                    </React.Fragment>\r\n                  );\r\n                }\r\n              })}\r\n            </Text>\r\n          </Box>\r\n          <Box\r\n            position=\"absolute\"\r\n            w=\"250px\"\r\n            mx=\"auto\"\r\n            my=\"auto\"\r\n            textAlign=\"center\"\r\n            fontSize=\"lg\"\r\n            fontWeight=\"bold\"\r\n            textStyle=\"heading\"\r\n            color=\"white\"\r\n            pt=\"275px\"\r\n            as=\"span\"\r\n            _groupHover={{\r\n              transform: \"translateY(-60%)\",\r\n              transition: \"transform 1000ms cubic-bezier(0.19, 1, 0.22, 1)\",\r\n            }}\r\n          >\r\n            {title}\r\n          </Box>\r\n          <Image\r\n            w=\"250px\"\r\n            h=\"350px\"\r\n            src={poster}\r\n            alt=\"movie poster\"\r\n            objectFit=\"cover\"\r\n            fallback={<PosterFallback />}\r\n          />\r\n        </NavLink>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import axios from \"axios\";\r\n\r\nconst {REACT_APP_API_URL} = process.env;\r\n\r\nexport const getMovies = () => {\r\n  const apiURL = REACT_APP_API_URL + \"/movies\";\r\n  return axios(apiURL, {\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((res) => res.data)\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        console.log(err.response);\r\n      } else if (err.request) {\r\n        // client never received a response, or request never left\r\n        console.log(err.request);\r\n      } else {\r\n        // anything else\r\n      }\r\n    });\r\n};\r\n\r\nexport const getMovieById = (id) => {\r\n  const apiURL = REACT_APP_API_URL + \"/movies/\" + id;\r\n  return axios(apiURL, {\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((res) => res.data)\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        return err.response.data;\r\n      } else if (err.request) {\r\n        // client never received a response, or request never left\r\n        console.log(err.request);\r\n      } else {\r\n        // anything else\r\n      }\r\n    });\r\n};\r\n\r\nexport const deleteMovie = (id) => {\r\n  const apiURL = REACT_APP_API_URL + \"/movies/\" + id;\r\n  return axios(apiURL, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((res) => res.data)\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        return err.response.data;\r\n      } else if (err.request) {\r\n        // client never received a response, or request never left\r\n        //console.log(err.request);\r\n      } else {\r\n        // anything else\r\n      }\r\n    });\r\n};\r\n\r\nexport const addMovie = (body, token) => {\r\n  const apiURL = REACT_APP_API_URL + \"/movies\";\r\n\r\n  return axios(apiURL, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    data: body,\r\n  })\r\n    .then((res) => res.data)\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        return err.response.data;\r\n      } else if (err.request) {\r\n        // client never received a response, or request never left\r\n        //console.log(err.request);\r\n      } else {\r\n        // anything else\r\n      }\r\n    });\r\n};\r\n\r\nexport const editMovie = (body, movieId, token) => {\r\n  const apiURL = REACT_APP_API_URL + \"/movies/\" + movieId;\r\n  return axios(apiURL, {\r\n    method: \"PATCH\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    data: body,\r\n  })\r\n    .then((res) => res.data)\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        return err.response.data;\r\n      } else if (err.request) {\r\n        // client never received a response, or request never left\r\n        //console.log(err.request);\r\n      } else {\r\n        // anything else\r\n      }\r\n    });\r\n};\r\n","import {React, useState, useEffect} from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  SimpleGrid,\r\n  Flex,\r\n  Container,\r\n  Button,\r\n  Center,\r\n  Text,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport {AddIcon} from \"@chakra-ui/icons\";\r\nimport MovieCard from \"./MovieCard\";\r\nimport {getMovies} from \"./MoviesService\";\r\n\r\nconst Movies = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const toast = useToast();\r\n\r\n  useEffect(() => {\r\n    getMovies()\r\n      .then((res) => {\r\n        setMovies(res.movies);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast({\r\n          title: \"Error\",\r\n          description: \"Error has occured, Please try again later.\",\r\n          status: \"error\",\r\n          duration: 3000,\r\n          isClosable: true,\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Container maxW=\"xl\">\r\n        <SimpleGrid columns={2} spacing={[52, 36]} pt=\"20\">\r\n          <Box>\r\n            <Center h=\"80px\">\r\n              <Text textStyle=\"heading\">Movies</Text>\r\n            </Center>\r\n          </Box>\r\n          <Box>\r\n            <Center h=\"80px\">\r\n              <NavLink to=\"/movies/add\">\r\n                <Button colorScheme=\"teal\" variant=\"solid\">\r\n                  <AddIcon w={5} h={5} pr=\"2\"></AddIcon> Add Movie\r\n                </Button>\r\n              </NavLink>\r\n            </Center>\r\n          </Box>\r\n        </SimpleGrid>\r\n        <Center>\r\n          <Flex p=\"10\" mt=\"5\">\r\n            <SimpleGrid columns={[1, 2, 3]} spacing=\"40px\">\r\n              {movies.map((movie) => {\r\n                return (\r\n                  <Box key={movie.id}>\r\n                    <MovieCard movie={movie}></MovieCard>\r\n                  </Box>\r\n                );\r\n              })}\r\n            </SimpleGrid>\r\n          </Flex>\r\n        </Center>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","import {React, useState, useRef, useEffect} from \"react\";\r\nimport {Link as ReactLink, NavLink} from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Container,\r\n  Image,\r\n  Text,\r\n  Stack,\r\n  Link,\r\n  Button,\r\n  Spacer,\r\n  Center,\r\n  Badge,\r\n} from \"@chakra-ui/react\";\r\nimport {\r\n  AlertDialog,\r\n  AlertDialogBody,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogContent,\r\n  AlertDialogOverlay,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport {PosterFallback} from \"../ui/MoviePosterFallback\";\r\nimport {getMovieById, deleteMovie} from \"./MoviesService\";\r\n\r\nconst MoviePage = (props) => {\r\n  const [movieDetails, setMovieDetails] = useState({\r\n    id: 0,\r\n    title: \"\",\r\n    poster: \"\",\r\n    genre: \"\",\r\n    release_date: \"\",\r\n    seeking_talent: false,\r\n    actors: [],\r\n  });\r\n  const [deleteIsOpen, setDeleteIsOpen] = useState(false);\r\n  const cancelRef = useRef();\r\n  const toast = useToast();\r\n  const movieId = props.match.params.movieId;\r\n\r\n  useEffect(() => {\r\n    getMovieById(movieId).then((res) => {\r\n      setMovieDetails(res.movie);\r\n    });\r\n  }, []);\r\n\r\n  const deleteMovieConfirm = () => {\r\n    deleteMovie(movieId).then((res) => {\r\n      if (res.success) {\r\n        toast({\r\n          title: \"Movie deleted\",\r\n          description: \"Selected movie deleted successfully\",\r\n          status: \"success\",\r\n          duration: 3000,\r\n          isClosable: true,\r\n        });\r\n        setDeleteIsOpen(false);\r\n      } else {\r\n        toast({\r\n          title: \"Error\",\r\n          description: \"An error has occured, Please try again later.\",\r\n          status: \"error\",\r\n          duration: 3000,\r\n          isClosable: true,\r\n        });\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <Container maxW=\"xl\" py=\"10\" centerContent>\r\n      <Box px=\"10\" pt=\"10\">\r\n        <Text textStyle=\"title\">{movieDetails.title}</Text>\r\n      </Box>\r\n      <Stack px=\"10\" py=\"5\" textStyle=\"info\">\r\n        <Center>\r\n          <Box h=\"450px\" overflow=\"hidden\" boxShadow=\"lg\">\r\n            <Image\r\n              maxW=\"xs\"\r\n              objectFit=\"cover\"\r\n              src={movieDetails.poster}\r\n              alt=\"Movie poster\"\r\n              fallback={<PosterFallback />}\r\n            />\r\n          </Box>\r\n        </Center>\r\n\r\n        {movieDetails.seeking_talent ? <Badge>Seeking talent</Badge> : null}\r\n\r\n        <Center>\r\n          <Container maxW=\"xs\" my=\"4\">\r\n            <Flex>\r\n              <Text>Genre: </Text>\r\n              <Spacer />\r\n              <Text>{movieDetails.genre}</Text>\r\n            </Flex>\r\n            <Flex>\r\n              <Text>Release Date: </Text>\r\n              <Spacer />\r\n              <Text>{movieDetails.release_date.substring(7, 16)}</Text>\r\n            </Flex>\r\n          </Container>\r\n        </Center>\r\n\r\n        <Text>Actors: </Text>\r\n        {movieDetails.actors.map((actor) => {\r\n          return (\r\n            <Link\r\n              as={ReactLink}\r\n              to={`/actors/${actor.id}`}\r\n              key={actor.id}\r\n              textStyle=\"links\"\r\n            >\r\n              {actor.first_name} {actor.last_name}\r\n            </Link>\r\n          );\r\n        })}\r\n      </Stack>\r\n      <Flex p=\"2\">\r\n        <NavLink to={`/movies/${movieId}/edit`}>\r\n          <Button mr=\"2\">Edit</Button>\r\n        </NavLink>\r\n        <Button ml=\"2\" bg=\"red.500\" onClick={() => setDeleteIsOpen(true)}>\r\n          Delete\r\n        </Button>\r\n      </Flex>\r\n      <AlertDialog\r\n        isOpen={deleteIsOpen}\r\n        leastDestructiveRef={cancelRef}\r\n        onClose={() => setDeleteIsOpen(false)}\r\n      >\r\n        <AlertDialogOverlay>\r\n          <AlertDialogContent>\r\n            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n              Delete Actor\r\n            </AlertDialogHeader>\r\n\r\n            <AlertDialogBody>\r\n              Are you sure? You can't undo this action afterwards.\r\n            </AlertDialogBody>\r\n\r\n            <AlertDialogFooter>\r\n              <Button ref={cancelRef} onClick={() => setDeleteIsOpen(false)}>\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                colorScheme=\"red\"\r\n                onClick={() => deleteMovieConfirm()}\r\n                ml={3}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </AlertDialogFooter>\r\n          </AlertDialogContent>\r\n        </AlertDialogOverlay>\r\n      </AlertDialog>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MoviePage;\r\n","import {React, useState, useEffect} from \"react\";\r\nimport {\r\n  Stack,\r\n  CheckboxGroup,\r\n  Checkbox,\r\n  Box,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\nimport {getMovies} from \"../movies/MoviesService\";\r\nimport {getActors} from \"../actors/ActorService\";\r\n\r\nexport const CustomCheckbox = (props) => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (props.data === \"movies\") {\r\n      getMovies()\r\n        .then((res) => {\r\n          setData(res.movies);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else if (props.data === \"actors\") {\r\n      getActors()\r\n        .then((res) => {\r\n          setData(res.actors);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Box\r\n      boxShadow=\"base\"\r\n      borderRadius=\"lg\"\r\n      maxH=\"165px\"\r\n      overflow=\"auto\"\r\n      bg={useColorModeValue(\"gray.100\", \"#ffffff0a\")}\r\n    >\r\n      <CheckboxGroup {...props} colorScheme=\"teal\">\r\n        <Stack pl={6} mt={1} spacing={1}>\r\n          {data.map((item) => (\r\n            <Checkbox key={item.id} value={Number(item.id)}>\r\n              {props.data === \"movies\"\r\n                ? item.title\r\n                : item.first_name + \" \" + item.last_name}\r\n            </Checkbox>\r\n          ))}\r\n        </Stack>\r\n      </CheckboxGroup>\r\n    </Box>\r\n  );\r\n};\r\n","import {React, useState, useEffect} from \"react\";\r\nimport {\r\n  Box,\r\n  Container,\r\n  Text,\r\n  Stack,\r\n  VStack,\r\n  Button,\r\n  Radio,\r\n  RadioGroup,\r\n  useToast,\r\n  FormControl,\r\n  FormLabel,\r\n  FormErrorMessage,\r\n  Input,\r\n  Center,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport {Formik, Form, Field} from \"formik\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport {addMovie, getMovieById, editMovie} from \"./MoviesService\";\r\nimport {CustomCheckbox} from \"../ui/CustomCheckbox\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\n\r\nconst AddMovie = (props) => {\r\n  const {getAccessTokenSilently} = useAuth0();\r\n  const [initialValues, setInitialValues] = useState({\r\n    title: \"\",\r\n    genre: \"\",\r\n    release_date: \"\",\r\n    poster: \"\",\r\n    seeking_talent: false,\r\n    actors: {actor_ids: []},\r\n  });\r\n  const [selectedActors, setSelectedActors] = useState([]);\r\n  const [seekingTalent, setSeekingTalent] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n\r\n  const toast = useToast();\r\n  const movieId = props.match.params.movieId;\r\n  console.log(selectedDate);\r\n  useEffect(() => {\r\n    if (props.actionType === \"edit\") {\r\n      getMovieById(movieId).then((res) => {\r\n        let movieInitialValues = {\r\n          title: res.movie.title,\r\n          genre: res.movie.genre,\r\n          release_date: res.movie.release_date,\r\n          poster: res.movie.poster,\r\n          seeking_talent: res.movie.seeking_talent,\r\n          actors: {actor_ids: res.movie.actors.map((actor) => actor.id)},\r\n        };\r\n        setSeekingTalent(res.movie.seeking_talent);\r\n        setSelectedActors(res.movie.actors.map((actor) => actor.id));\r\n        setInitialValues(movieInitialValues);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const validate = (values) => {\r\n    const errors = {};\r\n    if (!values.title) {\r\n      errors.title = \"Required\";\r\n    }\r\n\r\n    if (!values.genre) {\r\n      errors.genre = \"Required\";\r\n    }\r\n\r\n    /* if (!values.release_date) {\r\n      errors.release_date = \"Required\";\r\n    } */\r\n\r\n    if (!values.poster) {\r\n      errors.poster = \"Required\";\r\n    }\r\n\r\n    values.seeking_talent = seekingTalent;\r\n    if (!values.seeking_talent) {\r\n      errors.seeking_talent = \"Required\";\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  const checkActors = (e) => {\r\n    let newSelectedActors = e.map((actorId) => Number(actorId));\r\n    setSelectedActors(newSelectedActors);\r\n  };\r\n\r\n  const callAddMovie = async (values, actions) => {\r\n    const token = await getAccessTokenSilently();\r\n\r\n    const res = await addMovie(values, token);\r\n    console.log(token);\r\n    if (res.success) {\r\n      actions.setSubmitting(false);\r\n      toast({\r\n        title: \"Add movie\",\r\n        description: \"Movie added correctly.\",\r\n        status: \"success\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n    } else {\r\n      actions.setSubmitting(false);\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"An error has occured!\",\r\n        status: \"error\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const callEditMovie = async (values, actions) => {\r\n    const token = await getAccessTokenSilently();\r\n\r\n    const res = await editMovie(values, movieId, token);\r\n\r\n    if (res.success) {\r\n      actions.setSubmitting(false);\r\n      toast({\r\n        title: \"Edit movie\",\r\n        description: \"Movie information updated successfully.\",\r\n        status: \"success\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n    } else {\r\n      actions.setSubmitting(false);\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"An error has occured!\",\r\n        status: \"error\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxW=\"xl\" py=\"10\" centerContent>\r\n      <Box px=\"10\" pt=\"5\">\r\n        <Text textStyle=\"title\">\r\n          {props.actionType === \"edit\" ? \"Edit Movie\" : \"Add a new movie\"}\r\n        </Text>\r\n      </Box>\r\n\r\n      <Formik\r\n        initialValues={initialValues}\r\n        enableReinitialize={true}\r\n        validate={validate}\r\n        onSubmit={(values, actions) => {\r\n          values.actors.actors_id = selectedActors;\r\n          values.seeking_talent = seekingTalent === \"true\" ? true : false;\r\n          if (props.actionType === \"edit\") {\r\n            callEditMovie(values, movieId, actions);\r\n          } else {\r\n            callAddMovie(values, actions);\r\n          }\r\n        }}\r\n      >\r\n        {(props) => (\r\n          <Form>\r\n            <VStack\r\n              mt=\"16\"\r\n              spacing={8}\r\n              align=\"stretch\"\r\n              w={[\"xs\", \"sm\", \"md\", \"md\"]}\r\n            >\r\n              <Field name=\"title\">\r\n                {({field, form}) => (\r\n                  <FormControl\r\n                    isInvalid={form.errors.title && form.touched.title}\r\n                    isRequired\r\n                  >\r\n                    <FormLabel htmlFor=\"title\">Movie Title</FormLabel>\r\n                    <Input\r\n                      {...field}\r\n                      id=\"title\"\r\n                      variant=\"filled\"\r\n                      placeholder=\"First name\"\r\n                    />\r\n                    <FormErrorMessage>{form.errors.title}</FormErrorMessage>\r\n                  </FormControl>\r\n                )}\r\n              </Field>\r\n              <Field name=\"genre\">\r\n                {({field, form}) => (\r\n                  <FormControl\r\n                    isInvalid={form.errors.genre && form.touched.genre}\r\n                    isRequired\r\n                  >\r\n                    <FormLabel htmlFor=\"genre\">Genre</FormLabel>\r\n                    <Input\r\n                      {...field}\r\n                      id=\"genre\"\r\n                      variant=\"filled\"\r\n                      placeholder=\"Last name\"\r\n                    />\r\n                    <FormErrorMessage>{form.errors.genre}</FormErrorMessage>\r\n                  </FormControl>\r\n                )}\r\n              </Field>\r\n\r\n              <Field name=\"poster\">\r\n                {({field, form}) => (\r\n                  <FormControl\r\n                    isInvalid={form.errors.poster && form.touched.poster}\r\n                    isRequired\r\n                  >\r\n                    <FormLabel htmlFor=\"poster\">Poster</FormLabel>\r\n                    <Input\r\n                      {...field}\r\n                      id=\"poster\"\r\n                      variant=\"filled\"\r\n                      placeholder=\"https://\"\r\n                    />\r\n                    <FormErrorMessage>{form.errors.poster}</FormErrorMessage>\r\n                  </FormControl>\r\n                )}\r\n              </Field>\r\n\r\n              <Field name=\"release_date\">\r\n                {({field, form}) => (\r\n                  <FormControl\r\n                    isInvalid={\r\n                      form.errors.release_date && form.touched.release_date\r\n                    }\r\n                    isRequired\r\n                  >\r\n                    <FormLabel htmlFor=\"release_date\">Release Date</FormLabel>\r\n\r\n                    <ReactDatePicker\r\n                      {...field}\r\n                      selected={selectedDate}\r\n                      onChange={(date) => setSelectedDate(date)}\r\n                    ></ReactDatePicker>\r\n                    <FormErrorMessage>\r\n                      {form.errors.release_date}\r\n                    </FormErrorMessage>\r\n                  </FormControl>\r\n                )}\r\n              </Field>\r\n\r\n              <Field name=\"seeking_talent\">\r\n                {({field, form}) => (\r\n                  <FormControl\r\n                    isInvalid={\r\n                      form.errors.seeking_talent && form.touched.seeking_talent\r\n                    }\r\n                    isRequired\r\n                  >\r\n                    <FormLabel htmlFor=\"seeking_talent\">\r\n                      Seeking talent\r\n                    </FormLabel>\r\n\r\n                    <RadioGroup\r\n                      {...field}\r\n                      onChange={setSeekingTalent}\r\n                      value={seekingTalent}\r\n                    >\r\n                      <Stack direction=\"row\" spacing={5}>\r\n                        <Radio colorScheme=\"green\" value=\"true\">\r\n                          Yes\r\n                        </Radio>\r\n                        <Radio colorScheme=\"red\" value=\"false\">\r\n                          No\r\n                        </Radio>\r\n                      </Stack>\r\n                    </RadioGroup>\r\n                    <FormErrorMessage>\r\n                      {form.errors.seeking_talent}\r\n                    </FormErrorMessage>\r\n                  </FormControl>\r\n                )}\r\n              </Field>\r\n\r\n              <FormControl>\r\n                <FormLabel htmlFor=\"movies\">Actors: </FormLabel>\r\n                <CustomCheckbox\r\n                  data=\"actors\"\r\n                  value={selectedActors}\r\n                  onChange={(e) => {\r\n                    checkActors(e);\r\n                  }}\r\n                ></CustomCheckbox>\r\n              </FormControl>\r\n            </VStack>\r\n            <Center>\r\n              <Button\r\n                mt={8}\r\n                colorScheme=\"teal\"\r\n                isLoading={props.isSubmitting}\r\n                type=\"submit\"\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Center>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AddMovie;\r\n","import {React, useState, useEffect} from \"react\";\r\nimport {\r\n  Box,\r\n  Container,\r\n  Text,\r\n  Stack,\r\n  VStack,\r\n  Button,\r\n  Radio,\r\n  RadioGroup,\r\n  useToast,\r\n  FormControl,\r\n  FormLabel,\r\n  FormErrorMessage,\r\n  Input,\r\n  Center,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport {Formik, Form, Field} from \"formik\";\r\n\r\nimport {addActor, getActorById, editActor} from \"./ActorService\";\r\nimport {CustomCheckbox} from \"../ui/CustomCheckbox\";\r\n\r\nconst AddActor = (props) => {\r\n  const [initialValues, setInitialValues] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    age: \"\",\r\n    gender: \"\",\r\n    image_link: \"\",\r\n    seeking_role: false,\r\n    movies: {movie_ids: []},\r\n  });\r\n  const [selectedMovies, setSelectedMovies] = useState([]);\r\n  const [seekingRole, setSeekingRole] = useState(false);\r\n\r\n  const toast = useToast();\r\n  const actorId = props.match.params.actorId;\r\n\r\n  useEffect(() => {\r\n    if (props.actionType === \"edit\") {\r\n      getActorById(actorId).then((res) => {\r\n        console.log(res);\r\n        let actorInitialValues = {\r\n          first_name: res.actor.first_name,\r\n          last_name: res.actor.last_name,\r\n          age: res.actor.age,\r\n          gender: res.actor.gender,\r\n          image_link: res.actor.image_link,\r\n          seeking_role: res.actor.seeking_role,\r\n          movies: {movie_ids: res.actor.movies.map((movie) => movie.id)},\r\n        };\r\n        setSeekingRole(res.actor.seeking_role);\r\n        setSelectedMovies(res.actor.movies.map((movie) => movie.id));\r\n        setInitialValues(actorInitialValues);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const validate = (values) => {\r\n    const errors = {};\r\n    if (!values.first_name) {\r\n      errors.first_name = \"Required\";\r\n    }\r\n\r\n    if (!values.last_name) {\r\n      errors.last_name = \"Required\";\r\n    }\r\n\r\n    if (!values.age) {\r\n      errors.age = \"Required\";\r\n    } else if (isNaN(values.age) || values.age > 100) {\r\n      errors.age = \"Not a valid age value\";\r\n    }\r\n\r\n    if (!values.gender) {\r\n      errors.gender = \"Required\";\r\n    }\r\n\r\n    if (values.image_link) {\r\n      try {\r\n        new URL(values.image_link);\r\n      } catch (e) {\r\n        errors.image_link = \"Invalid image url\";\r\n      }\r\n    }\r\n    values.seeking_role = seekingRole;\r\n    if (!values.seeking_role) {\r\n      errors.seeking_role = \"Required\";\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  const checkMovies = (e) => {\r\n    let newSelectedMovies = e.map((i) => Number(i));\r\n    setSelectedMovies(newSelectedMovies);\r\n  };\r\n\r\n  return (\r\n    <Container maxW=\"xl\" py=\"10\" centerContent>\r\n      <Box px=\"10\" pt=\"5\">\r\n        <Text textStyle=\"title\">\r\n          {props.actionType === \"edit\" ? \"Edit actor\" : \"Enroll a new actor\"}\r\n        </Text>\r\n      </Box>\r\n\r\n      <Formik\r\n        initialValues={initialValues}\r\n        enableReinitialize={true}\r\n        validate={validate}\r\n        onSubmit={(values, actions) => {\r\n          values.age = Number(values.age);\r\n          values.movies.movie_ids = selectedMovies;\r\n          values.seeking_role = seekingRole === \"true\" ? true : false;\r\n          if (props.actionType === \"edit\") {\r\n            editActor(values, actorId).then((res) => {\r\n              if (res.success) {\r\n                actions.setSubmitting(false);\r\n                toast({\r\n                  title: \"Edit actor\",\r\n                  description: \"Actor information updated successfully.\",\r\n                  status: \"success\",\r\n                  duration: 3000,\r\n                  isClosable: true,\r\n                });\r\n              } else {\r\n                actions.setSubmitting(false);\r\n                toast({\r\n                  title: \"Error\",\r\n                  description: \"An error has occured!\",\r\n                  status: \"error\",\r\n                  duration: 3000,\r\n                  isClosable: true,\r\n                });\r\n              }\r\n            });\r\n          } else {\r\n            addActor(values).then((res) => {\r\n              if (res.success) {\r\n                actions.setSubmitting(false);\r\n                toast({\r\n                  title: \"Enroll actor\",\r\n                  description: \"Actor added correctly.\",\r\n                  status: \"success\",\r\n                  duration: 3000,\r\n                  isClosable: true,\r\n                });\r\n              } else {\r\n                actions.setSubmitting(false);\r\n                toast({\r\n                  title: \"Error\",\r\n                  description: \"An error has occured!\",\r\n                  status: \"error\",\r\n                  duration: 3000,\r\n                  isClosable: true,\r\n                });\r\n              }\r\n            });\r\n          }\r\n        }}\r\n      >\r\n        {(props) => (\r\n          <Form>\r\n            <VStack\r\n              mt=\"16\"\r\n              spacing={8}\r\n              align=\"stretch\"\r\n              w={[\"xs\", \"sm\", \"md\", \"md\"]}\r\n            >\r\n              <Field name=\"first_name\">\r\n                {({field, form}) => (\r\n                  <FormControl\r\n                    isInvalid={\r\n                      form.errors.first_name && form.touched.first_name\r\n                    }\r\n                    isRequired\r\n                  >\r\n                    <FormLabel htmlFor=\"first_name\">First Name</FormLabel>\r\n                    <Input\r\n                      {...field}\r\n                      id=\"first_name\"\r\n                      variant=\"filled\"\r\n                      placeholder=\"First name\"\r\n                    />\r\n                    <FormErrorMessage>\r\n                      {form.errors.first_name}\r\n                    </FormErrorMessage>\r\n                  </FormControl>\r\n                )}\r\n              </Field>\r\n              <Field name=\"last_name\">\r\n                {({field, form}) => (\r\n                  <FormControl\r\n                    isInvalid={form.errors.last_name && form.touched.last_name}\r\n                    isRequired\r\n                  >\r\n                    <FormLabel htmlFor=\"last_name\">Last Name</FormLabel>\r\n                    <Input\r\n                      {...field}\r\n                      id=\"last_name\"\r\n                      variant=\"filled\"\r\n                      placeholder=\"Last name\"\r\n                    />\r\n                    <FormErrorMessage>{form.errors.last_name}</FormErrorMessage>\r\n                  </FormControl>\r\n                )}\r\n              </Field>\r\n\r\n              <Field name=\"age\">\r\n                {({field, form}) => (\r\n                  <FormControl\r\n                    isInvalid={form.errors.age && form.touched.age}\r\n                    isRequired\r\n                  >\r\n                    <FormLabel htmlFor=\"age\">Age</FormLabel>\r\n                    <Input\r\n                      {...field}\r\n                      id=\"age\"\r\n                      variant=\"filled\"\r\n                      placeholder=\"age\"\r\n                    />\r\n                    <FormErrorMessage>{form.errors.age}</FormErrorMessage>\r\n                  </FormControl>\r\n                )}\r\n              </Field>\r\n\r\n              <Field name=\"gender\">\r\n                {({field, form}) => (\r\n                  <FormControl\r\n                    isInvalid={form.errors.gender && form.touched.gender}\r\n                    isRequired\r\n                  >\r\n                    <FormLabel htmlFor=\"gender\">Gender</FormLabel>\r\n                    <Input\r\n                      {...field}\r\n                      id=\"gender\"\r\n                      variant=\"filled\"\r\n                      placeholder=\"gender\"\r\n                    />\r\n                    <FormErrorMessage>{form.errors.gender}</FormErrorMessage>\r\n                  </FormControl>\r\n                )}\r\n              </Field>\r\n\r\n              <Field name=\"image_link\">\r\n                {({field, form}) => (\r\n                  <FormControl\r\n                    isInvalid={\r\n                      form.errors.image_link && form.touched.image_link\r\n                    }\r\n                  >\r\n                    <FormLabel htmlFor=\"image_link\">Profile image</FormLabel>\r\n                    <Input\r\n                      {...field}\r\n                      id=\"image_link\"\r\n                      variant=\"filled\"\r\n                      placeholder=\"https://\"\r\n                    />\r\n                    <FormErrorMessage>\r\n                      {form.errors.image_link}\r\n                    </FormErrorMessage>\r\n                  </FormControl>\r\n                )}\r\n              </Field>\r\n\r\n              <Field name=\"seeking_role\">\r\n                {({field, form}) => (\r\n                  <FormControl\r\n                    isInvalid={\r\n                      form.errors.seeking_role && form.touched.seeking_role\r\n                    }\r\n                    isRequired\r\n                  >\r\n                    <FormLabel htmlFor=\"seeking_role\">Seeking roles</FormLabel>\r\n\r\n                    <RadioGroup\r\n                      {...field}\r\n                      onChange={setSeekingRole}\r\n                      value={seekingRole}\r\n                    >\r\n                      <Stack direction=\"row\" spacing={5}>\r\n                        <Radio colorScheme=\"green\" value=\"true\">\r\n                          Yes\r\n                        </Radio>\r\n                        <Radio colorScheme=\"red\" value=\"false\">\r\n                          No\r\n                        </Radio>\r\n                      </Stack>\r\n                    </RadioGroup>\r\n                    <FormErrorMessage>\r\n                      {form.errors.seeking_role}\r\n                    </FormErrorMessage>\r\n                  </FormControl>\r\n                )}\r\n              </Field>\r\n\r\n              <FormControl>\r\n                <FormLabel htmlFor=\"movies\">Movies: </FormLabel>\r\n                <CustomCheckbox\r\n                  data=\"movies\"\r\n                  value={selectedMovies}\r\n                  onChange={(e) => {\r\n                    checkMovies(e);\r\n                  }}\r\n                ></CustomCheckbox>\r\n              </FormControl>\r\n            </VStack>\r\n            <Center>\r\n              <Button\r\n                mt={8}\r\n                colorScheme=\"teal\"\r\n                isLoading={props.isSubmitting}\r\n                type=\"submit\"\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Center>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AddActor;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1>404 not found</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Actors from \"./actors/Actors\";\nimport {Navbar} from \"./ui/Navbar\";\nimport {Home} from \"./ui/Home\";\nimport ActorPage from \"./actors/ActorPage\";\nimport Movies from \"./movies/Movies\";\nimport MoviePage from \"./movies/MoviePage\";\nimport AddMovie from \"./movies/AddMovie\";\nimport AddActor from \"./actors/AddActor\";\nimport NotFound from \"./ui/NotFound\";\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/movies\" component={Movies} />\n          <Route exact path=\"/movies/add\" component={AddMovie} />\n          <Route exact path=\"/movies/:movieId\" component={MoviePage} />\n          <Route\n            exact\n            path=\"/movies/:movieId/edit\"\n            render={(props) => <AddMovie {...props} actionType=\"edit\" />}\n          />\n          <Route exact path=\"/actors\" component={Actors} />\n          <Route exact path=\"/actors/add\" component={AddActor} />\n          <Route exact path=\"/actors/:actorId\" component={ActorPage} />\n          <Route\n            exact\n            path=\"/actors/:actorId/edit\"\n            render={(props) => <AddActor {...props} actionType=\"edit\" />}\n          />\n          <Route exact path=\"/404\" component={NotFound} />\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {Auth0Provider} from \"@auth0/auth0-react\";\r\n\r\nconst Auth0ProviderWithHistory = ({children}) => {\r\n  const domain = process.env.REACT_APP_AUTH0_DOMAIN;\r\n  const clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\r\n  const audience =   process.env.REACT_APP_AUTH0_AUDIENCE;\r\n  const history = useHistory();\r\n\r\n  const onRedirectCallback = (appState) => {\r\n    history.push(appState?.returnTo || window.location.pathname);\r\n  };\r\n\r\n  return (\r\n    <Auth0Provider\r\n      domain={domain}\r\n      clientId={clientId}\r\n      redirectUri={window.location.origin}\r\n      onRedirectCallback={onRedirectCallback}\r\n      audience={audience}\r\n    >\r\n      {children}\r\n    </Auth0Provider>\r\n  );\r\n};\r\n\r\nexport default Auth0ProviderWithHistory;\r\n","import {extendTheme} from \"@chakra-ui/react\";\r\nimport {mode} from \"@chakra-ui/theme-tools\";\r\n\r\nconst customTheme = extendTheme({\r\n  styles: {\r\n    global: (props) => ({\r\n      body: {\r\n        color: mode(\"gray.700\", \"whiteAlpha.900\")(props),\r\n        fontFamily: \"Lora, serif\",\r\n        fontWeights: {\r\n          normal: 400,\r\n          medium: 500,\r\n          bold: 700,\r\n        },\r\n      },\r\n      label: {color: mode(\"red.700\", \"green.900\")(props)},\r\n    }),\r\n  },\r\n  textStyles: {\r\n    heading: {\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n      letterSpacing: \"-0.015em\",\r\n      lineHeight: \"1.24\",\r\n      fontSize: {base: \"2rem\", md: \"3.5rem\"},\r\n    },\r\n    subheading: {\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n      letterSpacing: \"-0.015em\",\r\n      lineHeight: \"1.24\",\r\n      fontSize: {base: \"1.70rem\", md: \"2.70rem\"},\r\n    },\r\n    title: {\r\n      textAlign: \"center\",\r\n      fontWeight: \"semibold\",\r\n      letterSpacing: \"-0.015em\",\r\n      lineHeight: \"1.24\",\r\n      fontSize: {base: \"1.60rem\", md: \"2.60rem\"},\r\n    },\r\n    info: {\r\n      textAlign: \"center\",\r\n      fontWeight: \"regular\",\r\n      letterSpacing: \"0.015em\",\r\n      lineHeight: \"1.55\",\r\n      fontSize: {base: \"1.15rem\", md: \"1.25rem\"},\r\n    },\r\n    links: {\r\n      color: \"teal.500\",\r\n      fontWeight: \"semibold\",\r\n      transition: \"color 0.15s\",\r\n      transitionTimingFunction: \"ease-out\",\r\n      _hover: {\r\n        color: \"teal.600\",\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default customTheme;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Auth0ProviderWithHistory from \"./auth/Auth0ProviderWithHistory\";\nimport {ChakraProvider} from \"@chakra-ui/react\";\nimport customTheme from \"./styles/theme\";\n\n//const history = useHistory();\n\n/* const onRedirectCallback = (appState) => {\n  history.push(appState?.returnTo || window.location.pathname);\n}; */\n\nReactDOM.render(\n  <React.StrictMode>\n    <Auth0ProviderWithHistory>\n      <ChakraProvider theme={customTheme}>\n        <App />\n      </ChakraProvider>\n    </Auth0ProviderWithHistory>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}