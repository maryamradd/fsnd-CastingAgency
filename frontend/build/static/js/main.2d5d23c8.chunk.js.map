{"version":3,"sources":["auth/PrivateRoute.js","ui/ImageFallback.js","actors/ActorCard.js","actors/ActorService.js","actors/Actors.js","ui/Navbar.js","ui/AddButton.js","movies/MoviesService.js","ui/Home.js","actors/ActorPage.js","movies/MovieCard.js","movies/Movies.js","movies/MoviePage.js","ui/CustomCheckbox.js","movies/AddMovie.js","actors/AddActor.js","ui/NotFound.js","ui/Footer.js","App.js","reportWebVitals.js","auth/Auth0ProviderWithHistory.js","styles/theme.js","index.js"],"names":["PrivateRoute","component","args","withAuthenticationRequired","onRedirecting","ImageFallback","maxW","flexDirection","alignItems","justifyContent","opacity","h","mx","my","ViewOff","mt","ActorCard","props","actor","id","first_name","last_name","age","gender","image_link","seeking_role","role","to","w","rounded","borderRadius","boxShadow","bg","useColorModeValue","_groupHover","transform","overflow","src","alt","fallback","objectFit","boxSize","pb","pt","pl","fontWeight","as","lineHeight","isTruncated","d","color","letterSpacing","fontSize","textTransform","colorScheme","ml","REACT_APP_API_URL","process","getActors","axios","headers","then","res","data","catch","err","response","console","log","request","getActorById","apiURL","deleteActor","token","method","Authorization","addActor","body","editActor","actorId","Actors","useState","actors","setActors","toast","useToast","isAuthenticated","useAuth0","useEffect","title","description","status","duration","isClosable","position","minH","columns","spacing","textStyle","variant","Add","pr","p","map","Navbar","useColorMode","colorMode","toggleColorMode","loginWithRedirect","logout","user","isLoading","px","borderBottom","borderColor","_hover","_active","outline","_focus","onClick","Sun","Moon","isLoaded","py","mr","size","picture","loading","cursor","returnTo","window","location","origin","AddButton","action","actionLink","borderStyle","display","top","right","getMovies","getMovieById","deleteMovie","addMovie","editMovie","movieId","Home","moviesCount","setMoviesCount","actorsCount","setActorsCount","userMetadata","setUserMetadata","getAccessTokenSilently","getIdTokenClaims","movies","length","a","domain","audience","scope","accessToken","userDetailsByIdUrl","sub","fetch","metadataResponse","json","user_metadata","message","getUserMetadata","centerContent","JSON","stringify","textAlign","nickname","ReactLink","ActorPage","lastname","actorDetails","setActorDetails","deleteIsOpen","setDeleteIsOpen","cancelRef","useRef","history","useHistory","match","params","success","push","deleteActorConfirm","movie","roles_and_permissions","roles","isOpen","leastDestructiveRef","onClose","ref","MovieCard","poster","release_date","transition","backgroundImage","substring","slice","i","Fragment","Movies","setMovies","MoviePage","genre","seeking_talent","movieDetails","setMovieDetails","deleteMovieConfirm","minW","CustomCheckbox","setData","maxH","item","value","Number","AddMovie","actor_ids","initialValues","setInitialValues","selectedActors","setSelectedActors","seekingTalent","setSeekingTalent","Date","selectedDate","setSelectedDate","actionType","movieInitialValues","callMovieApi","values","actions","setSubmitting","enableReinitialize","validate","errors","URL","e","onSubmit","actors_id","align","name","field","form","isInvalid","touched","isRequired","htmlFor","placeholder","selected","onChange","date","direction","newSelectedActors","checkActors","isSubmitting","type","AddActor","movie_ids","selectedMovies","setSelectedMovies","seekingRole","setSeekingRole","actorInitialValues","callActorApi","isNaN","newSelectedMovies","checkMovies","NotFound","Footer","bottom","href","isExternal","decoration","App","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Auth0ProviderWithHistory","children","clientId","redirectUri","onRedirectCallback","appState","pathname","customTheme","extendTheme","styles","global","mode","fontFamily","fontWeights","normal","medium","bold","label","textStyles","heading","base","md","subheading","info","links","transitionTimingFunction","ReactDOM","StrictMode","theme","document","getElementById"],"mappings":"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","file":"static/js/main.2d5d23c8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Route} from \"react-router-dom\";\r\nimport {withAuthenticationRequired} from \"@auth0/auth0-react\";\r\nimport {Spinner} from \"@chakra-ui/react\";\r\n\r\nconst PrivateRoute = ({component, ...args}) => (\r\n  <Route\r\n    component={withAuthenticationRequired(component, {\r\n      onRedirecting: () => <Spinner />,\r\n    })}\r\n    {...args}\r\n  />\r\n);\r\n\r\nexport default PrivateRoute;\r\n","import {Text, Flex} from \"@chakra-ui/react\";\r\nimport {ViewOffIcon} from \"@chakra-ui/icons\";\r\n\r\nexport const ImageFallback = () => {\r\n  return (\r\n    <Flex\r\n      maxW=\"xs\"\r\n      flexDirection=\"column\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      opacity=\"0.50\"\r\n      h=\"250px\"\r\n      mx=\"auto\"\r\n      my=\"0\"\r\n    >\r\n      <ViewOffIcon />\r\n      <Text mt=\"2\">image not available</Text>\r\n    </Flex>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Image,\r\n  Badge,\r\n  Container,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport {ImageFallback} from \"../ui/ImageFallback\";\r\n\r\nconst ActorCard = (props) => {\r\n  const {\r\n    id,\r\n    first_name,\r\n    last_name,\r\n    age,\r\n    gender,\r\n    image_link,\r\n    seeking_role,\r\n  } = props.actor;\r\n\r\n  return (\r\n    <Container role=\"group\">\r\n      <NavLink to={`/actors/${id}`}>\r\n        <Box\r\n          maxW=\"md\"\r\n          w=\"250px\"\r\n          h=\"260px\"\r\n          rounded=\"lg\"\r\n          borderRadius=\"sm\"\r\n          boxShadow=\"md\"\r\n          bg={useColorModeValue(\"gray.50\", \"gray.700\")}\r\n          _groupHover={{\r\n            transform: \"translateY( -3px ) scale( 1.02 ) \",\r\n            boxShadow: \"2xl\",\r\n          }}\r\n        >\r\n          <Box w=\"250px\" h=\"180px\" overflow=\"hidden\">\r\n            <Image\r\n              src={image_link}\r\n              alt=\"actor image\"\r\n              fallback={<ImageFallback />}\r\n              objectFit=\"cover\"\r\n              boxSize=\"250px\"\r\n            />\r\n          </Box>\r\n          <Box pb=\"6\" pt=\"2\" pl=\"4\">\r\n            <Box\r\n              mt=\"1\"\r\n              fontWeight=\"semibold\"\r\n              as=\"h4\"\r\n              lineHeight=\"tight\"\r\n              isTruncated\r\n            >\r\n              {first_name} {last_name}\r\n            </Box>\r\n            <Box d=\"flex\" alignItems=\"baseline\">\r\n              <Box\r\n                mt=\"4px\"\r\n                color=\"gray.500\"\r\n                fontWeight=\"semibold\"\r\n                letterSpacing=\"wide\"\r\n                fontSize=\"xs\"\r\n                textTransform=\"uppercase\"\r\n              >\r\n                {age} yrs\r\n                <Box as=\"span\" opacity={0.7} pl=\"4px\">\r\n                  &bull; {gender}\r\n                </Box>\r\n                {seeking_role ? (\r\n                  <Badge colorScheme=\"teal\" ml=\"19px\">\r\n                    Seeking role\r\n                  </Badge>\r\n                ) : null}\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </NavLink>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ActorCard;\r\n","import axios from \"axios\";\r\n\r\nconst {REACT_APP_API_URL} = process.env;\r\n\r\nexport const getActors = () => {\r\n  const apiURL = REACT_APP_API_URL + \"/actors\";\r\n  return axios(apiURL, {\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((res) => res.data)\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        console.log(err.response);\r\n      } else if (err.request) {\r\n        // client never received a response, or request never left\r\n        console.log(err.request);\r\n      } else {\r\n        // anything else\r\n      }\r\n    });\r\n};\r\n\r\nexport const getActorById = (id) => {\r\n  const apiURL = REACT_APP_API_URL + \"/actors/\" + id;\r\n  return axios(apiURL, {\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((res) => res.data)\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        return err.response.data;\r\n      } else if (err.request) {\r\n        // client never received a response, or request never left\r\n        console.log(err.request);\r\n      } else {\r\n        // anything else\r\n      }\r\n    });\r\n};\r\n\r\nexport const deleteActor = (id, token) => {\r\n  const apiURL = REACT_APP_API_URL + \"/actors/\" + id;\r\n  return axios(apiURL, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((res) => res.data)\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        return err.response.data;\r\n      } else if (err.request) {\r\n        // client never received a response, or request never left\r\n        //console.log(err.request);\r\n      } else {\r\n        // anything else\r\n      }\r\n    });\r\n};\r\n\r\nexport const addActor = (body, token) => {\r\n  const apiURL = REACT_APP_API_URL + \"/actors\";\r\n  return axios(apiURL, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    data: body,\r\n  })\r\n    .then((res) => res.data)\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        return err.response.data;\r\n      } else if (err.request) {\r\n        // client never received a response, or request never left\r\n        //console.log(err.request);\r\n      } else {\r\n        // anything else\r\n      }\r\n    });\r\n};\r\n\r\nexport const editActor = (body, actorId, token) => {\r\n  const apiURL = REACT_APP_API_URL + \"/actors/\" + actorId;\r\n  return axios(apiURL, {\r\n    method: \"PATCH\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    data: body,\r\n  })\r\n    .then((res) => res.data)\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        return err.response.data;\r\n      } else if (err.request) {\r\n        // client never received a response, or request never left\r\n        //console.log(err.request);\r\n      } else {\r\n        // anything else\r\n      }\r\n    });\r\n};\r\n","import {React, useState, useEffect} from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport ActorCard from \"./ActorCard\";\r\nimport {\r\n  Box,\r\n  SimpleGrid,\r\n  Flex,\r\n  Container,\r\n  Button,\r\n  Center,\r\n  Text,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport {AddIcon} from \"@chakra-ui/icons\";\r\n\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport {getActors} from \"./ActorService\";\r\n\r\nconst Actors = () => {\r\n  const [actors, setActors] = useState([]);\r\n  const toast = useToast();\r\n  const {isAuthenticated} = useAuth0();\r\n\r\n  useEffect(() => {\r\n    getActors()\r\n      .then((res) => {\r\n        setActors(res.actors);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast({\r\n          title: \"Error\",\r\n          description: \"An error has occured, Please try again later.\",\r\n          status: \"error\",\r\n          duration: 3000,\r\n          isClosable: true,\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Container maxW=\"xl\" position=\"relative\" minH=\"calc(100vh - 81px)\">\r\n        <SimpleGrid columns={2} spacing={[52, 36]} pt=\"20\">\r\n          <Box>\r\n            <Center h=\"80px\">\r\n              <Text textStyle=\"heading\">Actors</Text>\r\n            </Center>\r\n          </Box>\r\n          <Box>\r\n            <Center h=\"80px\">\r\n              {isAuthenticated ? (\r\n                <NavLink to=\"/actors/add\">\r\n                  <Button colorScheme=\"teal\" variant=\"solid\">\r\n                    <AddIcon w={5} h={5} pr=\"2\"></AddIcon> Add Actor\r\n                  </Button>\r\n                </NavLink>\r\n              ) : null}\r\n            </Center>\r\n          </Box>\r\n        </SimpleGrid>\r\n        <Center>\r\n          <Flex p=\"10\" mt=\"5\">\r\n            <SimpleGrid columns={[1, 2, 3]} spacing=\"40px\">\r\n              {actors.map((actor) => {\r\n                return (\r\n                  <Box key={actor.id}>\r\n                    <ActorCard actor={actor}></ActorCard>\r\n                  </Box>\r\n                );\r\n              })}\r\n            </SimpleGrid>\r\n          </Flex>\r\n        </Center>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Actors;\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport {\r\n  Flex,\r\n  Spacer,\r\n  Box,\r\n  Button,\r\n  useColorMode,\r\n  useColorModeValue,\r\n  Skeleton,\r\n  Avatar,\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  PopoverBody,\r\n  PopoverArrow,\r\n  Portal,\r\n} from \"@chakra-ui/react\";\r\nimport {SunIcon, MoonIcon} from \"@chakra-ui/icons\";\r\n\r\nconst Navbar = () => {\r\n  const {colorMode, toggleColorMode} = useColorMode();\r\n\r\n  const {\r\n    loginWithRedirect,\r\n    logout,\r\n    user,\r\n    isAuthenticated,\r\n    isLoading,\r\n  } = useAuth0();\r\n\r\n  return (\r\n    <Flex\r\n      pt=\"6\"\r\n      pb=\"4\"\r\n      px=\"8\"\r\n      borderBottom=\"1px\"\r\n      borderColor={useColorModeValue(\"gray.200\", \"gray.700\")}\r\n    >\r\n      <Box px=\"4\">\r\n        <NavLink to=\"/\">\r\n          <Box\r\n            as=\"button\"\r\n            h=\"42px\"\r\n            w=\"42px\"\r\n            color=\"white\"\r\n            borderRadius=\"50%\"\r\n            fontSize=\"16px\"\r\n            fontWeight=\"bold\"\r\n            bg=\"linear-gradient(299deg, rgba(44,122,123,1) 0%, rgba(79,209,197,1) 100%)\"\r\n            _hover={{\r\n              bg: \"#38B2AC\",\r\n            }}\r\n            _active={{\r\n              bg: \"#4FD1C5\",\r\n              outline: \"none\",\r\n            }}\r\n            _focus={{\r\n              outline: \"none\",\r\n            }}\r\n          >\r\n            CA\r\n          </Box>\r\n        </NavLink>\r\n      </Box>\r\n      <Box px=\"4\">\r\n        <NavLink to=\"/actors\">\r\n          <Button colorScheme=\"teal\" variant=\"ghost\" borderRadius=\"8px\">\r\n            Actors\r\n          </Button>\r\n        </NavLink>\r\n      </Box>\r\n      <Box px=\"4\">\r\n        <NavLink to=\"/movies\">\r\n          <Button colorScheme=\"teal\" variant=\"ghost\" borderRadius=\"8px\">\r\n            Movies\r\n          </Button>\r\n        </NavLink>\r\n      </Box>\r\n      <Spacer />\r\n      <Box>\r\n        <Button onClick={toggleColorMode} variant=\"ghost\">\r\n          {colorMode === \"light\" ? (\r\n            <SunIcon w={4} h={4} color=\"gray.600\" />\r\n          ) : (\r\n            <MoonIcon w={4} h={4} color=\"gray.600\" />\r\n          )}\r\n        </Button>\r\n      </Box>\r\n      <Skeleton isLoaded={!isLoading}>\r\n        {isAuthenticated ? (\r\n          <Box px=\"4\" py=\"1\">\r\n            <Popover>\r\n              <PopoverTrigger>\r\n                <Avatar\r\n                  mr=\"16px\"\r\n                  size=\"sm\"\r\n                  src={user.picture}\r\n                  loading=\"lazy\"\r\n                  _hover={{cursor: \"pointer\"}}\r\n                />\r\n              </PopoverTrigger>\r\n              <Portal>\r\n                <PopoverContent>\r\n                  <PopoverArrow />\r\n\r\n                  <PopoverBody w=\"xs\">\r\n                    <Button\r\n                      colorScheme=\"teal\"\r\n                      onClick={() => logout({returnTo: window.location.origin})}\r\n                    >\r\n                      Log out\r\n                    </Button>\r\n                  </PopoverBody>\r\n                </PopoverContent>\r\n              </Portal>\r\n            </Popover>\r\n          </Box>\r\n        ) : (\r\n          <Box px=\"4\">\r\n            <Button\r\n              colorScheme=\"teal\"\r\n              onClick={() =>\r\n                loginWithRedirect().then((res) => console.log(res))\r\n              }\r\n            >\r\n              Log in\r\n            </Button>\r\n          </Box>\r\n        )}\r\n      </Skeleton>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Text,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\nimport {AddIcon} from \"@chakra-ui/icons\";\r\n\r\nconst AddButton = ({action, actionLink}) => {\r\n  return (\r\n    <Box>\r\n      <NavLink to={actionLink}>\r\n        <Button\r\n          maxW=\"md\"\r\n          w=\"150px\"\r\n          h=\"150px\"\r\n          boxShadow=\"base\"\r\n          borderStyle=\"dashed\"\r\n          borderColor=\"teal.500\"\r\n          borderRadius=\"md\"\r\n          opacity=\"1\"\r\n          bg={useColorModeValue(\"gray.50\", \"gray.700\")}\r\n        >\r\n          <AddIcon\r\n            display=\"block\"\r\n            w={6}\r\n            h={6}\r\n            pr=\"2\"\r\n            position=\"absolute\"\r\n            top=\"30%\"\r\n            right=\"40%\"\r\n          ></AddIcon>\r\n          <Text display=\"block\" fontSize=\"xl\" mt=\"8\">\r\n            {action}\r\n          </Text>\r\n        </Button>\r\n      </NavLink>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddButton;\r\n","import axios from \"axios\";\r\n\r\nconst {REACT_APP_API_URL} = process.env;\r\n\r\nexport const getMovies = () => {\r\n  const apiURL = REACT_APP_API_URL + \"/movies\";\r\n  return axios(apiURL, {\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((res) => res.data)\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        console.log(err.response);\r\n      } else if (err.request) {\r\n        // client never received a response, or request never left\r\n        console.log(err.request);\r\n      } else {\r\n        // anything else\r\n      }\r\n    });\r\n};\r\n\r\nexport const getMovieById = (id) => {\r\n  const apiURL = REACT_APP_API_URL + \"/movies/\" + id;\r\n  return axios(apiURL, {\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((res) => res.data)\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        return err.response.data;\r\n      } else if (err.request) {\r\n        // client never received a response, or request never left\r\n        console.log(err.request);\r\n      } else {\r\n        // anything else\r\n      }\r\n    });\r\n};\r\n\r\nexport const deleteMovie = (id, token) => {\r\n  const apiURL = REACT_APP_API_URL + \"/movies/\" + id;\r\n  return axios(apiURL, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((res) => res.data)\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        return err.response.data;\r\n      } else if (err.request) {\r\n        // client never received a response, or request never left\r\n        //console.log(err.request);\r\n      } else {\r\n        // anything else\r\n      }\r\n    });\r\n};\r\n\r\nexport const addMovie = (body, token) => {\r\n  const apiURL = REACT_APP_API_URL + \"/movies\";\r\n\r\n  return axios(apiURL, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    data: body,\r\n  })\r\n    .then((res) => res.data)\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        return err.response.data;\r\n      } else if (err.request) {\r\n        // client never received a response, or request never left\r\n        //console.log(err.request);\r\n      } else {\r\n        // anything else\r\n      }\r\n    });\r\n};\r\n\r\nexport const editMovie = (body, movieId, token) => {\r\n  const apiURL = REACT_APP_API_URL + \"/movies/\" + movieId;\r\n  return axios(apiURL, {\r\n    method: \"PATCH\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    data: body,\r\n  })\r\n    .then((res) => res.data)\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        return err.response.data;\r\n      } else if (err.request) {\r\n        // client never received a response, or request never left\r\n        //console.log(err.request);\r\n      } else {\r\n        // anything else\r\n      }\r\n    });\r\n};\r\n","import {React, useState, useEffect} from \"react\";\r\nimport {Link as ReactLink} from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  SimpleGrid,\r\n  Container,\r\n  Text,\r\n  useColorModeValue,\r\n  Link,\r\n  Stat,\r\n  StatLabel,\r\n  StatNumber,\r\n  StatHelpText,\r\n} from \"@chakra-ui/react\";\r\nimport AddButton from \"./AddButton\";\r\n\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport {getMovies} from \"../movies/MoviesService\";\r\nimport {getActors} from \"../actors/ActorService\";\r\n\r\nconst Home = () => {\r\n  const [moviesCount, setMoviesCount] = useState(0);\r\n  const [actorsCount, setActorsCount] = useState(0);\r\n  const [userMetadata, setUserMetadata] = useState(null);\r\n\r\n  const {\r\n    user,\r\n    isAuthenticated,\r\n    getIdTokenClaims,\r\n\r\n    getAccessTokenSilently,\r\n  } = useAuth0();\r\n\r\n  useEffect(() => {\r\n    getMovies()\r\n      .then((res) => {\r\n        setMoviesCount(res.movies.length);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    getActors()\r\n      .then((res) => {\r\n        setActorsCount(res.actors.length);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    const getUserMetadata = async () => {\r\n      const domain = process.env.REACT_APP_AUTH0_DOMAIN;\r\n\r\n      try {\r\n        const accessToken = await getAccessTokenSilently({\r\n          audience: `https://${domain}/api/v2/`,\r\n          scope: \"read:current_user\",\r\n        });\r\n\r\n        const userDetailsByIdUrl = `https://${domain}/api/v2/users/${user.sub}`;\r\n\r\n        const metadataResponse = await fetch(userDetailsByIdUrl, {\r\n          headers: {\r\n            Authorization: `Bearer ${accessToken}`,\r\n          },\r\n        });\r\n\r\n        const {user_metadata} = await metadataResponse.json();\r\n\r\n        setUserMetadata(user_metadata);\r\n      } catch (e) {\r\n        console.log(e.message);\r\n      }\r\n    };\r\n\r\n    getUserMetadata();\r\n  }, []);\r\n\r\n  return (\r\n    <Container\r\n      maxW=\"xl\"\r\n      pt=\"20\"\r\n      px=\"20\"\r\n      position=\"relative\"\r\n      minH=\"calc(100vh - 81px)\"\r\n      centerContent\r\n    >\r\n      {userMetadata ? (\r\n        <pre>{JSON.stringify(userMetadata, null, 2)}</pre>\r\n      ) : (\r\n        \"No user metadata defined\"\r\n      )}\r\n      <Text textStyle=\"heading\">Dashboard</Text>\r\n      <Box mt=\"20\" textAlign=\"center\">\r\n        <Text fontSize=\"lg\">\r\n          Welcome {isAuthenticated ? user.nickname + \" !\" : \"!\"}\r\n        </Text>\r\n        <Text fontSize=\"md\">\r\n          you're in the <strong>{isAuthenticated ? \"user\" : \"guest\"}</strong>{\" \"}\r\n          Dashboard\r\n        </Text>\r\n      </Box>\r\n      <SimpleGrid columns={[1, 2, 4]} spacing=\"20px\" mt=\"10\">\r\n        <Box\r\n          maxW=\"md\"\r\n          w=\"150px\"\r\n          h=\"150px\"\r\n          boxShadow=\"base\"\r\n          borderRadius=\"md\"\r\n          opacity=\"1\"\r\n          bg={useColorModeValue(\"gray.50\", \"gray.700\")}\r\n        >\r\n          <Stat pt=\"8\" pl=\"4\">\r\n            <StatLabel fontSize=\"xl\">Actors</StatLabel>\r\n            <StatNumber>{actorsCount}</StatNumber>\r\n            <StatHelpText>\r\n              <Link as={ReactLink} to=\"/actors\" textStyle=\"links\">\r\n                View all actors\r\n              </Link>\r\n            </StatHelpText>\r\n          </Stat>\r\n        </Box>\r\n\r\n        <Box\r\n          maxW=\"md\"\r\n          w=\"150px\"\r\n          h=\"150px\"\r\n          boxShadow=\"base\"\r\n          borderRadius=\"md\"\r\n          opacity=\"1\"\r\n          bg={useColorModeValue(\"gray.50\", \"gray.700\")}\r\n        >\r\n          <Stat pt=\"8\" pl=\"4\">\r\n            <StatLabel fontSize=\"xl\">Movies</StatLabel>\r\n            <StatNumber>{moviesCount}</StatNumber>\r\n            <StatHelpText>\r\n              <Link as={ReactLink} to=\"/movies\" textStyle=\"links\">\r\n                View all movies\r\n              </Link>\r\n            </StatHelpText>\r\n          </Stat>\r\n        </Box>\r\n        {!isAuthenticated ? null : (\r\n          <>\r\n            <AddButton action=\"Add actors\" actionLink=\"/actors/add\" />\r\n            <AddButton action=\"Add movies\" actionLink=\"/movies/add\" />\r\n          </>\r\n        )}\r\n      </SimpleGrid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import {React, useState, useRef, useEffect} from \"react\";\r\nimport {Link as ReactLink, NavLink, useHistory} from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Container,\r\n  Image,\r\n  Text,\r\n  Stack,\r\n  Link,\r\n  Button,\r\n  Spacer,\r\n  Center,\r\n  Badge,\r\n  AlertDialog,\r\n  AlertDialogBody,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogContent,\r\n  AlertDialogOverlay,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport {ImageFallback} from \"../ui/ImageFallback\";\r\n\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport {getActorById, deleteActor} from \"./ActorService\";\r\n\r\nconst ActorPage = (props) => {\r\n  const [actorDetails, setActorDetails] = useState({\r\n    id: 0,\r\n    first_name: \"\",\r\n    lastname: \"\",\r\n    age: \"\",\r\n    gender: \"\",\r\n    image_link: \"\",\r\n    seeking_role: false,\r\n    movies: [],\r\n  });\r\n  const [deleteIsOpen, setDeleteIsOpen] = useState(false);\r\n\r\n  const {getAccessTokenSilently, isAuthenticated, user} = useAuth0();\r\n  const cancelRef = useRef();\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n  const actorId = props.match.params.actorId;\r\n\r\n  useEffect(() => {\r\n    getActorById(actorId).then((res) => {\r\n      if (res.success) {\r\n        setActorDetails(res.actor);\r\n      } else {\r\n        history.push(\"/404\");\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const deleteActorConfirm = async () => {\r\n    const token = await getAccessTokenSilently();\r\n    const res = await deleteActor(actorId, token);\r\n\r\n    if (res.success) {\r\n      toast({\r\n        title: \"Actor deleted\",\r\n        description: \"Selected actor deleted successfully\",\r\n        status: \"success\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n      setDeleteIsOpen(false);\r\n    } else {\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"An error has occured, Please try again later.\",\r\n        status: \"error\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      maxW=\"xl\"\r\n      position=\"relative\"\r\n      minH=\"calc(100vh - 81px)\"\r\n      centerContent\r\n    >\r\n      <Box px=\"10\" pt=\"10\">\r\n        <Text textStyle=\"title\">\r\n          {actorDetails.first_name} {actorDetails.last_name}\r\n        </Text>\r\n      </Box>\r\n      <Stack px=\"10\" py=\"5\" textStyle=\"info\">\r\n        <Center>\r\n          <Box boxSize=\"xs\" overflow=\"hidden\" boxShadow=\"lg\">\r\n            <Image\r\n              maxW=\"xs\"\r\n              objectFit=\"cover\"\r\n              src={actorDetails.image_link}\r\n              alt=\"Actor image\"\r\n              fallback={<ImageFallback />}\r\n            />\r\n          </Box>\r\n        </Center>\r\n\r\n        {actorDetails.seeking_role ? <Badge>Seeking role</Badge> : null}\r\n\r\n        <Center>\r\n          <Container maxW=\"3xs\" my=\"4\">\r\n            <Flex>\r\n              <Text>Age: </Text>\r\n              <Spacer />\r\n              <Text>{actorDetails.age} yrs</Text>\r\n            </Flex>\r\n            <Flex>\r\n              <Text>Gender: </Text>\r\n              <Spacer />\r\n              <Text>{actorDetails.gender} </Text>\r\n            </Flex>\r\n          </Container>\r\n        </Center>\r\n\r\n        <Text>Movies: </Text>\r\n        {actorDetails.movies.map((movie) => {\r\n          return (\r\n            <Link\r\n              as={ReactLink}\r\n              to={`/movies/${movie.id}`}\r\n              key={movie.id}\r\n              textStyle=\"links\"\r\n            >\r\n              {movie.title}\r\n            </Link>\r\n          );\r\n        })}\r\n      </Stack>\r\n      <Flex p=\"2\">\r\n        {isAuthenticated &&\r\n        (user.roles_and_permissions.roles[0] === \"Executive Producer\" ||\r\n          user.roles_and_permissions.roles[0] === \"Casting Director\") ? (\r\n          <NavLink to={`/actors/${actorId}/edit`}>\r\n            <Button mr=\"2\">Edit</Button>\r\n          </NavLink>\r\n        ) : null}\r\n\r\n        {isAuthenticated &&\r\n        user.roles_and_permissions.roles[0] === \"Executive Producer\" ? (\r\n          <Button ml=\"2\" bg=\"red.500\" onClick={() => setDeleteIsOpen(true)}>\r\n            Delete\r\n          </Button>\r\n        ) : null}\r\n      </Flex>\r\n      <AlertDialog\r\n        isOpen={deleteIsOpen}\r\n        leastDestructiveRef={cancelRef}\r\n        onClose={() => setDeleteIsOpen(false)}\r\n      >\r\n        <AlertDialogOverlay>\r\n          <AlertDialogContent>\r\n            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n              Delete Actor\r\n            </AlertDialogHeader>\r\n\r\n            <AlertDialogBody>\r\n              Are you sure? You can't undo this action afterwards.\r\n            </AlertDialogBody>\r\n\r\n            <AlertDialogFooter>\r\n              <Button ref={cancelRef} onClick={() => setDeleteIsOpen(false)}>\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                colorScheme=\"red\"\r\n                onClick={() => deleteActorConfirm()}\r\n                ml={3}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </AlertDialogFooter>\r\n          </AlertDialogContent>\r\n        </AlertDialogOverlay>\r\n      </AlertDialog>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ActorPage;\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Box, Image, Container, Text, useColorModeValue} from \"@chakra-ui/react\";\r\nimport {ImageFallback} from \"../ui/ImageFallback\";\r\n\r\nconst MovieCard = (props) => {\r\n  const {id, title, poster, release_date, actors} = props.movie;\r\n\r\n  return (\r\n    <Container>\r\n      <Box\r\n        maxW=\"md\"\r\n        w=\"250px\"\r\n        h=\"350px\"\r\n        rounded=\"lg\"\r\n        borderRadius=\"sm\"\r\n        boxShadow=\"md\"\r\n        role=\"group\"\r\n        bg={useColorModeValue(\"white\", \"gray.700\")}\r\n      >\r\n        <NavLink to={`/movies/${id}`}>\r\n          <Box\r\n            position=\"absolute\"\r\n            w=\"250px\"\r\n            h=\"350px\"\r\n            py=\"70px\"\r\n            textAlign=\"center\"\r\n            color=\"gray.300\"\r\n            fontWeight=\"semibold\"\r\n            letterSpacing=\"5px\"\r\n            fontSize=\"xs\"\r\n            opacity=\"0\"\r\n            textTransform=\"uppercase\"\r\n            _groupHover={{\r\n              opacity: 1,\r\n              transition: \"opacity 0.2s ease-in\",\r\n              backgroundImage:\r\n                \"linear-gradient(to bottom, hsla(0, 0%, 0%, 0) 0%,hsla(0, 0%, 0%, 0.762) 94.1%,hsla(0, 0%, 0%, 0.790) 100%)\",\r\n            }}\r\n          >\r\n            {release_date.substring(7, 16)}\r\n            <Text as=\"p\" mt=\"200px\" letterSpacing=\"2px\">\r\n              {actors.slice(0, 3).map((actor, i) => {\r\n                if (i === actors.length - 1 || i === 2) {\r\n                  return (\r\n                    <React.Fragment key={actor.id}>\r\n                      {\" \"}\r\n                      {actor.last_name}\r\n                    </React.Fragment>\r\n                  );\r\n                } else {\r\n                  return (\r\n                    <React.Fragment key={actor.id}>\r\n                      {\" \"}\r\n                      {actor.last_name} &bull;\r\n                    </React.Fragment>\r\n                  );\r\n                }\r\n              })}\r\n            </Text>\r\n          </Box>\r\n          <Box\r\n            position=\"absolute\"\r\n            w=\"250px\"\r\n            mx=\"auto\"\r\n            my=\"auto\"\r\n            textAlign=\"center\"\r\n            fontSize=\"lg\"\r\n            fontWeight=\"bold\"\r\n            textStyle=\"heading\"\r\n            color=\"white\"\r\n            pt=\"275px\"\r\n            as=\"span\"\r\n            _groupHover={{\r\n              transform: \"translateY(-60%)\",\r\n              transition: \"transform 1000ms cubic-bezier(0.19, 1, 0.22, 1)\",\r\n            }}\r\n          >\r\n            {title}\r\n          </Box>\r\n          <Image\r\n            w=\"250px\"\r\n            h=\"350px\"\r\n            src={poster}\r\n            alt=\"movie poster\"\r\n            objectFit=\"cover\"\r\n            fallback={<ImageFallback />}\r\n          />\r\n        </NavLink>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import {React, useState, useEffect} from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  SimpleGrid,\r\n  Flex,\r\n  Container,\r\n  Button,\r\n  Center,\r\n  Text,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport {AddIcon} from \"@chakra-ui/icons\";\r\nimport MovieCard from \"./MovieCard\";\r\n\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport {getMovies} from \"./MoviesService\";\r\n\r\nconst Movies = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const toast = useToast();\r\n  const {isAuthenticated} = useAuth0();\r\n\r\n  useEffect(() => {\r\n    getMovies()\r\n      .then((res) => {\r\n        setMovies(res.movies);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast({\r\n          title: \"Error\",\r\n          description: \"Error has occured, Please try again later.\",\r\n          status: \"error\",\r\n          duration: 3000,\r\n          isClosable: true,\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Container maxW=\"xl\" position=\"relative\" minH=\"calc(100vh - 81px)\">\r\n        <SimpleGrid columns={2} spacing={[52, 36]} pt=\"20\">\r\n          <Box>\r\n            <Center h=\"80px\">\r\n              <Text textStyle=\"heading\">Movies</Text>\r\n            </Center>\r\n          </Box>\r\n          <Box>\r\n            <Center h=\"80px\">\r\n              {isAuthenticated ? (\r\n                <NavLink to=\"/movies/add\">\r\n                  <Button colorScheme=\"teal\" variant=\"solid\">\r\n                    <AddIcon w={5} h={5} pr=\"2\"></AddIcon> Add Movie\r\n                  </Button>\r\n                </NavLink>\r\n              ) : null}\r\n            </Center>\r\n          </Box>\r\n        </SimpleGrid>\r\n        <Center>\r\n          <Flex p=\"10\" mt=\"5\">\r\n            <SimpleGrid columns={[1, 2, 3]} spacing=\"40px\">\r\n              {movies.map((movie) => {\r\n                return (\r\n                  <Box key={movie.id}>\r\n                    <MovieCard movie={movie}></MovieCard>\r\n                  </Box>\r\n                );\r\n              })}\r\n            </SimpleGrid>\r\n          </Flex>\r\n        </Center>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","import {React, useState, useRef, useEffect} from \"react\";\r\nimport {Link as ReactLink, NavLink, useHistory} from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Container,\r\n  Image,\r\n  Text,\r\n  Stack,\r\n  Link,\r\n  Button,\r\n  Spacer,\r\n  Center,\r\n  Badge,\r\n  AlertDialog,\r\n  AlertDialogBody,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogContent,\r\n  AlertDialogOverlay,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport {ImageFallback} from \"../ui/ImageFallback\";\r\n\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport {getMovieById, deleteMovie} from \"./MoviesService\";\r\n\r\nconst MoviePage = (props) => {\r\n  const [movieDetails, setMovieDetails] = useState({\r\n    id: 0,\r\n    title: \"\",\r\n    poster: \"\",\r\n    genre: \"\",\r\n    release_date: \"\",\r\n    seeking_talent: false,\r\n    actors: [],\r\n  });\r\n  const [deleteIsOpen, setDeleteIsOpen] = useState(false);\r\n\r\n  const {getAccessTokenSilently, isAuthenticated, user} = useAuth0();\r\n  const cancelRef = useRef();\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n  const movieId = props.match.params.movieId;\r\n\r\n  useEffect(() => {\r\n    getMovieById(movieId).then((res) => {\r\n      if (res.success) {\r\n        setMovieDetails(res.movie);\r\n      } else {\r\n        history.push(\"/404\");\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const deleteMovieConfirm = async () => {\r\n    const token = await getAccessTokenSilently();\r\n    const res = await deleteMovie(movieId, token);\r\n\r\n    if (res.success) {\r\n      toast({\r\n        title: \"Movie deleted\",\r\n        description: \"Selected movie deleted successfully\",\r\n        status: \"success\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n      setDeleteIsOpen(false);\r\n    } else {\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"An error has occured, Please try again later.\",\r\n        status: \"error\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      maxW=\"xl\"\r\n      position=\"relative\"\r\n      minH=\"calc(100vh - 81px)\"\r\n      centerContent\r\n    >\r\n      <Box px=\"10\" pt=\"10\">\r\n        <Text textStyle=\"title\">{movieDetails.title}</Text>\r\n      </Box>\r\n      <Stack px=\"10\" py=\"5\" textStyle=\"info\">\r\n        <Center>\r\n          <Box h=\"450px\" minW=\"250px\" overflow=\"hidden\" boxShadow=\"lg\">\r\n            <Image\r\n              maxW=\"xs\"\r\n              objectFit=\"cover\"\r\n              src={movieDetails.poster}\r\n              alt=\"Movie poster\"\r\n              fallback={<ImageFallback />}\r\n            />\r\n          </Box>\r\n        </Center>\r\n\r\n        {movieDetails.seeking_talent ? <Badge>Seeking talent</Badge> : null}\r\n\r\n        <Center>\r\n          <Container maxW=\"xs\" my=\"4\">\r\n            <Flex>\r\n              <Text>Genre: </Text>\r\n              <Spacer />\r\n              <Text>{movieDetails.genre}</Text>\r\n            </Flex>\r\n            <Flex>\r\n              <Text>Release Date: </Text>\r\n              <Spacer />\r\n              <Text>{movieDetails.release_date.substring(7, 16)}</Text>\r\n            </Flex>\r\n          </Container>\r\n        </Center>\r\n\r\n        <Text>Actors: </Text>\r\n        {movieDetails.actors.map((actor) => {\r\n          return (\r\n            <Link\r\n              as={ReactLink}\r\n              to={`/actors/${actor.id}`}\r\n              key={actor.id}\r\n              textStyle=\"links\"\r\n            >\r\n              {actor.first_name} {actor.last_name}\r\n            </Link>\r\n          );\r\n        })}\r\n      </Stack>\r\n      <Flex p=\"2\">\r\n        {isAuthenticated &&\r\n        (user.roles_and_permissions.roles[0] === \"Executive Producer\" ||\r\n          user.roles_and_permissions.roles[0] === \"Casting Director\") ? (\r\n          <NavLink to={`/movies/${movieId}/edit`}>\r\n            <Button mr=\"2\">Edit</Button>\r\n          </NavLink>\r\n        ) : null}\r\n\r\n        {isAuthenticated &&\r\n        user.roles_and_permissions.roles[0] === \"Executive Producer\" ? (\r\n          <Button ml=\"2\" bg=\"red.500\" onClick={() => setDeleteIsOpen(true)}>\r\n            Delete\r\n          </Button>\r\n        ) : null}\r\n      </Flex>\r\n      <AlertDialog\r\n        isOpen={deleteIsOpen}\r\n        leastDestructiveRef={cancelRef}\r\n        onClose={() => setDeleteIsOpen(false)}\r\n      >\r\n        <AlertDialogOverlay>\r\n          <AlertDialogContent>\r\n            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n              Delete Actor\r\n            </AlertDialogHeader>\r\n\r\n            <AlertDialogBody>\r\n              Are you sure? You can't undo this action afterwards.\r\n            </AlertDialogBody>\r\n\r\n            <AlertDialogFooter>\r\n              <Button ref={cancelRef} onClick={() => setDeleteIsOpen(false)}>\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                colorScheme=\"red\"\r\n                onClick={() => deleteMovieConfirm()}\r\n                ml={3}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </AlertDialogFooter>\r\n          </AlertDialogContent>\r\n        </AlertDialogOverlay>\r\n      </AlertDialog>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MoviePage;\r\n","import {React, useState, useEffect} from \"react\";\r\nimport {\r\n  Stack,\r\n  CheckboxGroup,\r\n  Checkbox,\r\n  Box,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\nimport {getMovies} from \"../movies/MoviesService\";\r\nimport {getActors} from \"../actors/ActorService\";\r\n\r\nexport const CustomCheckbox = (props) => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (props.data === \"movies\") {\r\n      getMovies()\r\n        .then((res) => {\r\n          setData(res.movies);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else if (props.data === \"actors\") {\r\n      getActors()\r\n        .then((res) => {\r\n          setData(res.actors);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Box\r\n      boxShadow=\"base\"\r\n      borderRadius=\"lg\"\r\n      maxH=\"165px\"\r\n      overflow=\"auto\"\r\n      bg={useColorModeValue(\"gray.100\", \"#ffffff0a\")}\r\n    >\r\n      <CheckboxGroup {...props} colorScheme=\"teal\">\r\n        <Stack pl={6} mt={1} spacing={1}>\r\n          {data.map((item) => (\r\n            <Checkbox key={item.id} value={Number(item.id)}>\r\n              {props.data === \"movies\"\r\n                ? item.title\r\n                : item.first_name + \" \" + item.last_name}\r\n            </Checkbox>\r\n          ))}\r\n        </Stack>\r\n      </CheckboxGroup>\r\n    </Box>\r\n  );\r\n};\r\n","import {React, useState, useEffect} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Container,\r\n  Text,\r\n  Stack,\r\n  VStack,\r\n  Button,\r\n  Radio,\r\n  RadioGroup,\r\n  useToast,\r\n  FormControl,\r\n  FormLabel,\r\n  FormErrorMessage,\r\n  Input,\r\n  Center,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport {Formik, Form, Field} from \"formik\";\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {CustomCheckbox} from \"../ui/CustomCheckbox\";\r\nimport {getMovieById, addMovie, editMovie} from \"./MoviesService\";\r\n\r\nconst AddMovie = (props) => {\r\n  const [initialValues, setInitialValues] = useState({\r\n    title: \"\",\r\n    genre: \"\",\r\n    release_date: \"\",\r\n    poster: \"\",\r\n    seeking_talent: false,\r\n    actors: {actor_ids: []},\r\n  });\r\n  const [selectedActors, setSelectedActors] = useState([]);\r\n  const [seekingTalent, setSeekingTalent] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n\r\n  const {getAccessTokenSilently} = useAuth0();\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n  const movieId = props.match.params.movieId;\r\n\r\n  useEffect(() => {\r\n    if (props.actionType === \"edit\") {\r\n      getMovieById(movieId).then((res) => {\r\n        if (res.success) {\r\n          let movieInitialValues = {\r\n            title: res.movie.title,\r\n            genre: res.movie.genre,\r\n            release_date: res.movie.release_date,\r\n            poster: res.movie.poster,\r\n            seeking_talent: res.movie.seeking_talent,\r\n            actors: {actor_ids: res.movie.actors.map((actor) => actor.id)},\r\n          };\r\n          setSeekingTalent(res.movie.seeking_talent);\r\n          setSelectedActors(res.movie.actors.map((actor) => actor.id));\r\n          setInitialValues(movieInitialValues);\r\n        } else {\r\n          history.push(\"/404\");\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const validate = (values) => {\r\n    const errors = {};\r\n    if (!values.title) {\r\n      errors.title = \"Required\";\r\n    }\r\n\r\n    if (!values.genre) {\r\n      errors.genre = \"Required\";\r\n    }\r\n\r\n    values.release_date = selectedDate;\r\n    if (!values.release_date) {\r\n      errors.release_date = \"Required\";\r\n    }\r\n\r\n    if (values.poster) {\r\n      try {\r\n        new URL(values.poster);\r\n      } catch (e) {\r\n        errors.poster = \"Invalid image url\";\r\n      }\r\n    }\r\n\r\n    values.seeking_talent = seekingTalent;\r\n    if (!values.seeking_talent) {\r\n      errors.seeking_talent = \"Required\";\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  const checkActors = (e) => {\r\n    let newSelectedActors = e.map((actorId) => Number(actorId));\r\n    setSelectedActors(newSelectedActors);\r\n  };\r\n\r\n  const callMovieApi = async (values, actions, actionType) => {\r\n    const token = await getAccessTokenSilently();\r\n    var res;\r\n\r\n    if (actionType === \"edit\") {\r\n      res = await editMovie(values, movieId, token);\r\n    } else {\r\n      res = await addMovie(values, token);\r\n    }\r\n    console.log(token);\r\n    if (res.success) {\r\n      actions.setSubmitting(false);\r\n      toast({\r\n        title: actionType === \"edit\" ? \"Edit movie\" : \"Add movie\",\r\n        description:\r\n          actionType === \"edit\"\r\n            ? \"Movie information updated successfully.\"\r\n            : \"Movie added successfully.\",\r\n        status: \"success\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n    } else {\r\n      actions.setSubmitting(false);\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"An error has occured!\",\r\n        status: \"error\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      maxW=\"xl\"\r\n      position=\"relative\"\r\n      minH=\"calc(100vh - 81px)\"\r\n      py=\"20\"\r\n      centerContent\r\n    >\r\n      <Box px=\"10\" pt=\"5\">\r\n        <Text textStyle=\"title\">\r\n          {props.actionType === \"edit\" ? \"Edit Movie\" : \"Add a new movie\"}\r\n        </Text>\r\n      </Box>\r\n\r\n      <Formik\r\n        initialValues={initialValues}\r\n        enableReinitialize={true}\r\n        validate={validate}\r\n        onSubmit={(values, actions) => {\r\n          values.actors.actors_id = selectedActors;\r\n          values.seeking_talent = seekingTalent === \"true\" ? true : false;\r\n          if (props.actionType === \"edit\") {\r\n            callMovieApi(values, actions, \"edit\");\r\n          } else {\r\n            callMovieApi(values, actions, \"add\");\r\n          }\r\n        }}\r\n      >\r\n        {(props) => (\r\n          <Form>\r\n            <VStack\r\n              mt=\"16\"\r\n              spacing={8}\r\n              align=\"stretch\"\r\n              w={[\"xs\", \"sm\", \"md\", \"md\"]}\r\n            >\r\n              <Field name=\"title\">\r\n                {({field, form}) => (\r\n                  <FormControl\r\n                    isInvalid={form.errors.title && form.touched.title}\r\n                    isRequired\r\n                  >\r\n                    <FormLabel htmlFor=\"title\">Movie Title</FormLabel>\r\n                    <Input\r\n                      {...field}\r\n                      id=\"title\"\r\n                      variant=\"filled\"\r\n                      placeholder=\"title\"\r\n                    />\r\n                    <FormErrorMessage>{form.errors.title}</FormErrorMessage>\r\n                  </FormControl>\r\n                )}\r\n              </Field>\r\n              <Field name=\"genre\">\r\n                {({field, form}) => (\r\n                  <FormControl\r\n                    isInvalid={form.errors.genre && form.touched.genre}\r\n                    isRequired\r\n                  >\r\n                    <FormLabel htmlFor=\"genre\">Genre</FormLabel>\r\n                    <Input\r\n                      {...field}\r\n                      id=\"genre\"\r\n                      variant=\"filled\"\r\n                      placeholder=\"genre\"\r\n                    />\r\n                    <FormErrorMessage>{form.errors.genre}</FormErrorMessage>\r\n                  </FormControl>\r\n                )}\r\n              </Field>\r\n\r\n              <Field name=\"poster\">\r\n                {({field, form}) => (\r\n                  <FormControl\r\n                    isInvalid={form.errors.poster && form.touched.poster}\r\n                  >\r\n                    <FormLabel htmlFor=\"poster\">Poster</FormLabel>\r\n                    <Input\r\n                      {...field}\r\n                      id=\"poster\"\r\n                      variant=\"filled\"\r\n                      placeholder=\"https://\"\r\n                    />\r\n                    <FormErrorMessage>{form.errors.poster}</FormErrorMessage>\r\n                  </FormControl>\r\n                )}\r\n              </Field>\r\n\r\n              <Field name=\"release_date\">\r\n                {({field, form}) => (\r\n                  <FormControl\r\n                    isInvalid={\r\n                      form.errors.release_date && form.touched.release_date\r\n                    }\r\n                    isRequired\r\n                  >\r\n                    <FormLabel htmlFor=\"release_date\">Release Date</FormLabel>\r\n\r\n                    <ReactDatePicker\r\n                      {...field}\r\n                      selected={selectedDate}\r\n                      onChange={(date) => setSelectedDate(date)}\r\n                    ></ReactDatePicker>\r\n                    <FormErrorMessage>\r\n                      {form.errors.release_date}\r\n                    </FormErrorMessage>\r\n                  </FormControl>\r\n                )}\r\n              </Field>\r\n\r\n              <Field name=\"seeking_talent\">\r\n                {({field, form}) => (\r\n                  <FormControl\r\n                    isInvalid={\r\n                      form.errors.seeking_talent && form.touched.seeking_talent\r\n                    }\r\n                    isRequired\r\n                  >\r\n                    <FormLabel htmlFor=\"seeking_talent\">\r\n                      Seeking talent\r\n                    </FormLabel>\r\n\r\n                    <RadioGroup\r\n                      {...field}\r\n                      onChange={setSeekingTalent}\r\n                      value={seekingTalent}\r\n                    >\r\n                      <Stack direction=\"row\" spacing={5}>\r\n                        <Radio colorScheme=\"green\" value=\"true\">\r\n                          Yes\r\n                        </Radio>\r\n                        <Radio colorScheme=\"red\" value=\"false\">\r\n                          No\r\n                        </Radio>\r\n                      </Stack>\r\n                    </RadioGroup>\r\n                    <FormErrorMessage>\r\n                      {form.errors.seeking_talent}\r\n                    </FormErrorMessage>\r\n                  </FormControl>\r\n                )}\r\n              </Field>\r\n\r\n              <FormControl>\r\n                <FormLabel htmlFor=\"movies\">Actors: </FormLabel>\r\n                <CustomCheckbox\r\n                  data=\"actors\"\r\n                  value={selectedActors}\r\n                  onChange={(e) => {\r\n                    checkActors(e);\r\n                  }}\r\n                ></CustomCheckbox>\r\n              </FormControl>\r\n            </VStack>\r\n            <Center>\r\n              <Button\r\n                mt={8}\r\n                colorScheme=\"teal\"\r\n                isLoading={props.isSubmitting}\r\n                type=\"submit\"\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Center>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AddMovie;\r\n","import {React, useState, useEffect} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Container,\r\n  Text,\r\n  Stack,\r\n  VStack,\r\n  Button,\r\n  Radio,\r\n  RadioGroup,\r\n  useToast,\r\n  FormControl,\r\n  FormLabel,\r\n  FormErrorMessage,\r\n  Input,\r\n  Center,\r\n} from \"@chakra-ui/react\";\r\nimport {Formik, Form, Field} from \"formik\";\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport {CustomCheckbox} from \"../ui/CustomCheckbox\";\r\nimport {getActorById, addActor, editActor} from \"./ActorService\";\r\n\r\nconst AddActor = (props) => {\r\n  const [initialValues, setInitialValues] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    age: \"\",\r\n    gender: \"\",\r\n    image_link: \"\",\r\n    seeking_role: false,\r\n    movies: {movie_ids: []},\r\n  });\r\n  const [selectedMovies, setSelectedMovies] = useState([]);\r\n  const [seekingRole, setSeekingRole] = useState(false);\r\n\r\n  const {getAccessTokenSilently} = useAuth0();\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n  const actorId = props.match.params.actorId;\r\n\r\n  useEffect(() => {\r\n    if (props.actionType === \"edit\") {\r\n      getActorById(actorId).then((res) => {\r\n        if (res.success) {\r\n          let actorInitialValues = {\r\n            first_name: res.actor.first_name,\r\n            last_name: res.actor.last_name,\r\n            age: res.actor.age,\r\n            gender: res.actor.gender,\r\n            image_link: res.actor.image_link,\r\n            seeking_role: res.actor.seeking_role,\r\n            movies: {movie_ids: res.actor.movies.map((movie) => movie.id)},\r\n          };\r\n          setSeekingRole(res.actor.seeking_role);\r\n          setSelectedMovies(res.actor.movies.map((movie) => movie.id));\r\n          setInitialValues(actorInitialValues);\r\n        } else {\r\n          history.push(\"/404\");\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const validate = (values) => {\r\n    const errors = {};\r\n    if (!values.first_name) {\r\n      errors.first_name = \"Required\";\r\n    }\r\n\r\n    if (!values.last_name) {\r\n      errors.last_name = \"Required\";\r\n    }\r\n\r\n    if (!values.age) {\r\n      errors.age = \"Required\";\r\n    } else if (isNaN(values.age) || values.age > 100) {\r\n      errors.age = \"Not a valid age value\";\r\n    }\r\n\r\n    if (!values.gender) {\r\n      errors.gender = \"Required\";\r\n    }\r\n\r\n    if (values.image_link) {\r\n      try {\r\n        new URL(values.image_link);\r\n      } catch (e) {\r\n        errors.image_link = \"Invalid image url\";\r\n      }\r\n    }\r\n    values.seeking_role = seekingRole;\r\n    if (!values.seeking_role) {\r\n      errors.seeking_role = \"Required\";\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  const checkMovies = (e) => {\r\n    let newSelectedMovies = e.map((i) => Number(i));\r\n    setSelectedMovies(newSelectedMovies);\r\n  };\r\n\r\n  const callActorApi = async (values, actions, actionType) => {\r\n    const token = await getAccessTokenSilently();\r\n    var res;\r\n\r\n    if (actionType === \"edit\") {\r\n      res = await editActor(values, actorId, token);\r\n    } else {\r\n      res = await addActor(values, token);\r\n    }\r\n    console.log(token);\r\n    if (res.success) {\r\n      actions.setSubmitting(false);\r\n      toast({\r\n        title: actionType === \"edit\" ? \"Edit actor\" : \"Add actor\",\r\n        description:\r\n          actionType === \"edit\"\r\n            ? \"Actor information updated successfully.\"\r\n            : \"Actor added successfully.\",\r\n        status: \"success\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n    } else {\r\n      actions.setSubmitting(false);\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"An error has occured!\",\r\n        status: \"error\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      maxW=\"xl\"\r\n      position=\"relative\"\r\n      minH=\"calc(100vh - 81px)\"\r\n      py=\"20\"\r\n      centerContent\r\n    >\r\n      <Box px=\"10\" pt=\"5\">\r\n        <Text textStyle=\"title\">\r\n          {props.actionType === \"edit\" ? \"Edit actor\" : \"Enroll a new actor\"}\r\n        </Text>\r\n      </Box>\r\n\r\n      <Formik\r\n        initialValues={initialValues}\r\n        enableReinitialize={true}\r\n        validate={validate}\r\n        onSubmit={(values, actions) => {\r\n          values.age = Number(values.age);\r\n          values.movies.movie_ids = selectedMovies;\r\n          values.seeking_role = seekingRole === \"true\" ? true : false;\r\n          if (props.actionType === \"edit\") {\r\n            callActorApi(values, actions, \"edit\");\r\n          } else {\r\n            callActorApi(values, actions, \"add\");\r\n          }\r\n        }}\r\n      >\r\n        {(props) => (\r\n          <Form>\r\n            <VStack\r\n              mt=\"16\"\r\n              spacing={8}\r\n              align=\"stretch\"\r\n              w={[\"xs\", \"sm\", \"md\", \"md\"]}\r\n            >\r\n              <Field name=\"first_name\">\r\n                {({field, form}) => (\r\n                  <FormControl\r\n                    isInvalid={\r\n                      form.errors.first_name && form.touched.first_name\r\n                    }\r\n                    isRequired\r\n                  >\r\n                    <FormLabel htmlFor=\"first_name\">First Name</FormLabel>\r\n                    <Input\r\n                      {...field}\r\n                      id=\"first_name\"\r\n                      variant=\"filled\"\r\n                      placeholder=\"First name\"\r\n                    />\r\n                    <FormErrorMessage>\r\n                      {form.errors.first_name}\r\n                    </FormErrorMessage>\r\n                  </FormControl>\r\n                )}\r\n              </Field>\r\n              <Field name=\"last_name\">\r\n                {({field, form}) => (\r\n                  <FormControl\r\n                    isInvalid={form.errors.last_name && form.touched.last_name}\r\n                    isRequired\r\n                  >\r\n                    <FormLabel htmlFor=\"last_name\">Last Name</FormLabel>\r\n                    <Input\r\n                      {...field}\r\n                      id=\"last_name\"\r\n                      variant=\"filled\"\r\n                      placeholder=\"Last name\"\r\n                    />\r\n                    <FormErrorMessage>{form.errors.last_name}</FormErrorMessage>\r\n                  </FormControl>\r\n                )}\r\n              </Field>\r\n\r\n              <Field name=\"age\">\r\n                {({field, form}) => (\r\n                  <FormControl\r\n                    isInvalid={form.errors.age && form.touched.age}\r\n                    isRequired\r\n                  >\r\n                    <FormLabel htmlFor=\"age\">Age</FormLabel>\r\n                    <Input\r\n                      {...field}\r\n                      id=\"age\"\r\n                      variant=\"filled\"\r\n                      placeholder=\"age\"\r\n                    />\r\n                    <FormErrorMessage>{form.errors.age}</FormErrorMessage>\r\n                  </FormControl>\r\n                )}\r\n              </Field>\r\n\r\n              <Field name=\"gender\">\r\n                {({field, form}) => (\r\n                  <FormControl\r\n                    isInvalid={form.errors.gender && form.touched.gender}\r\n                    isRequired\r\n                  >\r\n                    <FormLabel htmlFor=\"gender\">Gender</FormLabel>\r\n                    <Input\r\n                      {...field}\r\n                      id=\"gender\"\r\n                      variant=\"filled\"\r\n                      placeholder=\"gender\"\r\n                    />\r\n                    <FormErrorMessage>{form.errors.gender}</FormErrorMessage>\r\n                  </FormControl>\r\n                )}\r\n              </Field>\r\n\r\n              <Field name=\"image_link\">\r\n                {({field, form}) => (\r\n                  <FormControl\r\n                    isInvalid={\r\n                      form.errors.image_link && form.touched.image_link\r\n                    }\r\n                  >\r\n                    <FormLabel htmlFor=\"image_link\">Profile image</FormLabel>\r\n                    <Input\r\n                      {...field}\r\n                      id=\"image_link\"\r\n                      variant=\"filled\"\r\n                      placeholder=\"https://\"\r\n                    />\r\n                    <FormErrorMessage>\r\n                      {form.errors.image_link}\r\n                    </FormErrorMessage>\r\n                  </FormControl>\r\n                )}\r\n              </Field>\r\n\r\n              <Field name=\"seeking_role\">\r\n                {({field, form}) => (\r\n                  <FormControl\r\n                    isInvalid={\r\n                      form.errors.seeking_role && form.touched.seeking_role\r\n                    }\r\n                    isRequired\r\n                  >\r\n                    <FormLabel htmlFor=\"seeking_role\">Seeking roles</FormLabel>\r\n\r\n                    <RadioGroup\r\n                      {...field}\r\n                      onChange={setSeekingRole}\r\n                      value={seekingRole}\r\n                    >\r\n                      <Stack direction=\"row\" spacing={5}>\r\n                        <Radio colorScheme=\"green\" value=\"true\">\r\n                          Yes\r\n                        </Radio>\r\n                        <Radio colorScheme=\"red\" value=\"false\">\r\n                          No\r\n                        </Radio>\r\n                      </Stack>\r\n                    </RadioGroup>\r\n                    <FormErrorMessage>\r\n                      {form.errors.seeking_role}\r\n                    </FormErrorMessage>\r\n                  </FormControl>\r\n                )}\r\n              </Field>\r\n\r\n              <FormControl>\r\n                <FormLabel htmlFor=\"movies\">Movies: </FormLabel>\r\n                <CustomCheckbox\r\n                  data=\"movies\"\r\n                  value={selectedMovies}\r\n                  onChange={(e) => {\r\n                    checkMovies(e);\r\n                  }}\r\n                ></CustomCheckbox>\r\n              </FormControl>\r\n            </VStack>\r\n            <Center>\r\n              <Button\r\n                mt={8}\r\n                colorScheme=\"teal\"\r\n                isLoading={props.isSubmitting}\r\n                type=\"submit\"\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Center>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AddActor;\r\n","import React from \"react\";\r\nimport {Link as ReactLink} from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Container,\r\n  Text,\r\n  Link,\r\n} from \"@chakra-ui/react\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <Container\r\n      maxW=\"xl\"\r\n      pt=\"20\"\r\n      px=\"20\"\r\n      position=\"relative\"\r\n      minH=\"calc(100vh - 81px)\"\r\n      centerContent\r\n    >\r\n      <Box mt=\"20\" textAlign=\"center\">\r\n        <Text textStyle=\"heading\">404</Text>\r\n        <Text textStyle=\"title\" my=\"10\">\r\n          Not Found\r\n        </Text>\r\n        <Link as={ReactLink} to=\"/\" textStyle=\"links\">\r\n          Go home\r\n        </Link>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import {Box, Link} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Box as=\"footer\" textAlign=\"center\" position=\"absolute\" bottom=\"2\" w=\"100%\">\r\n      <Link\r\n        href=\"https://github.com/maryamradd/fsnd-CastingAgency\"\r\n        isExternal\r\n        decoration=\"none\"\r\n        fontSize=\"sm\"\r\n        opacity=\"0.35\"\r\n        _hover={{decoration: \"none\", opacity: 0.75}}\r\n      >\r\n        view src on Github\r\n      </Link>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport PrivateRoute from \"./auth/PrivateRoute\";\nimport Actors from \"./actors/Actors\";\nimport Navbar from \"./ui/Navbar\";\nimport Home from \"./ui/Home\";\nimport ActorPage from \"./actors/ActorPage\";\nimport Movies from \"./movies/Movies\";\nimport MoviePage from \"./movies/MoviePage\";\nimport AddMovie from \"./movies/AddMovie\";\nimport AddActor from \"./actors/AddActor\";\nimport NotFound from \"./ui/NotFound\";\nimport Footer from \"./ui/Footer\";\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/movies\" component={Movies} />\n          <PrivateRoute exact path=\"/movies/add\" component={AddMovie} />\n          <Route exact path=\"/movies/:movieId\" component={MoviePage} />\n          <PrivateRoute\n            exact\n            path=\"/movies/:movieId/edit\"\n            render={(props) => <AddMovie {...props} actionType=\"edit\" />}\n          />\n          <Route exact path=\"/actors\" component={Actors} />\n          <PrivateRoute exact path=\"/actors/add\" component={AddActor} />\n          <Route exact path=\"/actors/:actorId\" component={ActorPage} />\n          <PrivateRoute\n            exact\n            path=\"/actors/:actorId/edit\"\n            render={(props) => <AddActor {...props} actionType=\"edit\" />}\n          />\n          <Route component={NotFound} />\n        </Switch>\n        <Footer />\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {Auth0Provider} from \"@auth0/auth0-react\";\r\n\r\nconst Auth0ProviderWithHistory = ({children}) => {\r\n  const domain = process.env.REACT_APP_AUTH0_DOMAIN;\r\n  const clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\r\n  const audience =   process.env.REACT_APP_AUTH0_AUDIENCE;\r\n  const history = useHistory();\r\n\r\n  const onRedirectCallback = (appState) => {\r\n    history.push(appState?.returnTo || window.location.pathname);\r\n  };\r\n\r\n  return (\r\n    <Auth0Provider\r\n      domain={domain}\r\n      clientId={clientId}\r\n      redirectUri={window.location.origin}\r\n      onRedirectCallback={onRedirectCallback}\r\n      audience={audience}\r\n    >\r\n      {children}\r\n    </Auth0Provider>\r\n  );\r\n};\r\n\r\nexport default Auth0ProviderWithHistory;\r\n","import {extendTheme} from \"@chakra-ui/react\";\r\nimport {mode} from \"@chakra-ui/theme-tools\";\r\n\r\nconst customTheme = extendTheme({\r\n  styles: {\r\n    global: (props) => ({\r\n      body: {\r\n        color: mode(\"gray.700\", \"whiteAlpha.900\")(props),\r\n        fontFamily: \"Lora, serif\",\r\n        fontWeights: {\r\n          normal: 400,\r\n          medium: 500,\r\n          bold: 700,\r\n        },\r\n      },\r\n      label: {color: mode(\"red.700\", \"green.900\")(props)},\r\n    }),\r\n  },\r\n  textStyles: {\r\n    heading: {\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n      letterSpacing: \"-0.015em\",\r\n      lineHeight: \"1.24\",\r\n      fontSize: {base: \"2rem\", md: \"3.5rem\"},\r\n    },\r\n    subheading: {\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n      letterSpacing: \"-0.015em\",\r\n      lineHeight: \"1.24\",\r\n      fontSize: {base: \"1.70rem\", md: \"2.70rem\"},\r\n    },\r\n    title: {\r\n      textAlign: \"center\",\r\n      fontWeight: \"semibold\",\r\n      letterSpacing: \"-0.015em\",\r\n      lineHeight: \"1.24\",\r\n      fontSize: {base: \"1.60rem\", md: \"2.60rem\"},\r\n    },\r\n    info: {\r\n      textAlign: \"center\",\r\n      fontWeight: \"regular\",\r\n      letterSpacing: \"0.015em\",\r\n      lineHeight: \"1.55\",\r\n      fontSize: {base: \"1.15rem\", md: \"1.25rem\"},\r\n    },\r\n    links: {\r\n      color: \"teal.500\",\r\n      fontWeight: \"semibold\",\r\n      transition: \"color 0.15s\",\r\n      transitionTimingFunction: \"ease-out\",\r\n      _hover: {\r\n        color: \"teal.600\",\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default customTheme;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Auth0ProviderWithHistory from \"./auth/Auth0ProviderWithHistory\";\nimport {ChakraProvider} from \"@chakra-ui/react\";\nimport customTheme from \"./styles/theme\";\n\n//const history = useHistory();\n\n/* const onRedirectCallback = (appState) => {\n  history.push(appState?.returnTo || window.location.pathname);\n}; */\n\nReactDOM.render(\n  <React.StrictMode>\n    <Auth0ProviderWithHistory>\n      <ChakraProvider theme={customTheme}>\n        <App />\n      </ChakraProvider>\n    </Auth0ProviderWithHistory>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}